{"version":3,"file":"5806.28b839671e35c91f6319.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PeerChip.module.scss?346e","webpack://telegram-t/./src/components/common/PeerChip.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/gift/GiftRibbon.module.scss?54c5","webpack://telegram-t/./src/components/common/gift/GiftRibbon.tsx","webpack://telegram-t/./src/components/common/helpers/gifts.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/common/hooks/useEditorState.ts","webpack://telegram-t/./src/components/common/hooks/useShowCustomEmojiPremiumNotification.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.module.scss?0cfb","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/lib/twallpaper-webgl/load-shaders.ts","webpack://telegram-t/./src/lib/twallpaper-webgl/index.ts","webpack://telegram-t/./src/lib/twallpaper-webgl/hex-to-vec3.ts","webpack://telegram-t/./src/lib/twallpaper-webgl/vertex-shader.glsl.ts","webpack://telegram-t/./src/lib/twallpaper-webgl/fragment-shader.glsl.ts","webpack://telegram-t/./src/components/main/BackgroundGradient.module.scss?bc8c","webpack://telegram-t/./src/components/main/BackgroundGradient.tsx","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/ActionMessageUpdatedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/RichTextInput.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getSelectedBlockquote.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/common/reactions/PaidReactionEmoji.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.tsx","webpack://telegram-t/./src/components/middle/message/reactions/Reactions.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/global/helpers/peers.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/usePrevious.ts","webpack://telegram-t/./src/hooks/useResizeMessageObserver.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/util/markdown/common.ts","webpack://telegram-t/./src/util/markdown/parseCode.ts","webpack://telegram-t/./src/util/markdown/parseCommonEntities.ts","webpack://telegram-t/./src/util/markdown/parsePre.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/visibility/getOffsetToContainer.ts","webpack://telegram-t/./src/util/visibility/isFullyVisible.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: React.RefObject<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && getStickerMediaHash(sticker, 'full');\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-closed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button size=\"smaller\" type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"notClickable\":\"P8r3OoaX\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import type { TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle } from '../../global/helpers';\nimport { isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  peerId?: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  withPeerColors?: boolean;\n  withEmojiStatus?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n  itemClassName?: string;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  isSavedMessages,\n  withPeerColors,\n  withEmojiStatus,\n  onClick,\n  itemClassName,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || (\n      <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus={withEmojiStatus} />\n    );\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    !onClick && styles.notClickable,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={buildClassName(styles.name, itemClassName)} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\",\"primary\":\"Zi0w7QJ3\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  isPrimary,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldIgnorePremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  isEffectEmoji?: boolean;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  shouldIgnorePremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  isEffectEmoji,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, stickerSetInfo,\n  } = sticker;\n\n  const isPremium = (!sticker.isFree && isEffectEmoji) || sticker.hasEffect;\n  const isCustomEmoji = sticker.isCustomEmoji || isEffectEmoji;\n  const isLocked = !isCurrentUserPremium && isPremium && !shouldIgnorePremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuAnchor);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true }));\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      if (isEffectEmoji) {\n        openPremiumModal({ initialSection: 'effects' });\n      } else {\n        openPremiumModal({ initialSection: 'premium_stickers' });\n      }\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatusId: sticker.id,\n      expires: getServerTime() + duration,\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    isEffectEmoji && 'effect-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          noVideoOnMobile\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <Icon name=\"lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <Icon name=\"star\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AmQSvxpZ\",\"text\":\"pQW7dcwr\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useUniqueId from '../../../hooks/useUniqueId';\n\nimport styles from './GiftRibbon.module.scss';\n\nconst COLORS = {\n  red: [['#FF5B54', '#ED1C26'], ['#653633', '#532224']],\n  blue: [['#6ED2FF', '#34A4FC'], ['#344F5A', '#152E42']],\n} as const;\ntype ColorKey = keyof typeof COLORS;\n\nconst COLOR_KEYS = new Set(Object.keys(COLORS) as ColorKey[]);\n\ntype OwnProps = {\n  color: ColorKey | string;\n  text: string;\n  className?: string;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n};\n\nconst GiftRibbon = ({\n  text, color, className, theme,\n}: OwnProps & StateProps) => {\n  const randomId = useUniqueId();\n  const validSvgRandomId = `svg-${randomId}`; // ID must start with a letter\n\n  const colorKey = COLOR_KEYS.has(color as ColorKey) ? color as ColorKey : undefined;\n\n  const isDarkTheme = theme === 'dark';\n\n  const gradientColor = colorKey ? COLORS[colorKey][isDarkTheme ? 1 : 0] : undefined;\n  const startColor = gradientColor ? gradientColor[0] : color;\n  const endColor = gradientColor ? gradientColor[1] : color;\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <svg className={styles.ribbon} width=\"56\" height=\"56\" viewBox=\"0 0 56 56\" fill=\"none\">\n        <path d=\"M52.4851 26.4853L29.5145 3.51472C27.2641 1.26428 24.2119 0 21.0293 0H2.82824C1.04643 0 0.154103 2.15429 1.41403 3.41422L52.5856 54.5858C53.8455 55.8457 55.9998 54.9534 55.9998 53.1716V34.9706C55.9998 31.788 54.7355 28.7357 52.4851 26.4853Z\" fill={`url(#${validSvgRandomId})`} />\n        <defs>\n          <linearGradient id={validSvgRandomId} x1=\"27.9998\" y1=\"1\" x2=\"27.9998\" y2=\"55\" gradientUnits=\"userSpaceOnUse\">\n            <stop stop-color={startColor} />\n            <stop offset=\"1\" stop-color={endColor} />\n          </linearGradient>\n        </defs>\n      </svg>\n      <div className={styles.text}>{text}</div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      theme: selectTheme(global),\n    };\n  },\n)(GiftRibbon));\n","import type {\n  ApiFormattedText,\n  ApiStarGift,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributeOriginalDetails,\n  ApiStarGiftAttributePattern,\n  ApiSticker,\n} from '../../../api/types';\n\nexport type GiftAttributes = {\n  model?: ApiStarGiftAttributeModel;\n  originalDetails?: ApiStarGiftAttributeOriginalDetails;\n  pattern?: ApiStarGiftAttributePattern;\n  backdrop?: ApiStarGiftAttributeBackdrop;\n};\n\nexport function getStickerFromGift(gift: ApiStarGift): ApiSticker | undefined {\n  if (gift.type === 'starGift') {\n    return gift.sticker;\n  }\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')?.sticker;\n}\n\nexport function getTotalGiftAvailability(gift: ApiStarGift): number | undefined {\n  if (gift.type === 'starGift') {\n    return gift.availabilityTotal;\n  }\n\n  return gift.totalCount;\n}\n\nexport function getGiftMessage(gift: ApiStarGift): ApiFormattedText | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => attr.type === 'model')?.message;\n}\n\nexport function getGiftAttributes(gift: ApiStarGift): GiftAttributes | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return getGiftAttributesFromList(gift.attributes);\n}\n\nexport function getGiftAttributesFromList(attributes: ApiStarGiftAttribute[]) {\n  const model = attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model');\n  const backdrop = attributes.find((attr): attr is ApiStarGiftAttributeBackdrop => attr.type === 'backdrop');\n  const pattern = attributes.find((attr): attr is ApiStarGiftAttributePattern => attr.type === 'pattern');\n  const originalDetails = attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => (\n    attr.type === 'originalDetails'\n  ));\n\n  return {\n    model,\n    originalDetails,\n    pattern,\n    backdrop,\n  };\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import { useCallback, useSignal, useState } from '../../../lib/teact/teact';\n\nexport function useEditorState(defaultHtml = '') {\n  const [getHtml, originalSetHtml] = useSignal(defaultHtml);\n  const [overwrite, setOverwrite] = useState(false);\n  const [htmlOverwrite, setHtmlOverwrite] = useSignal(defaultHtml);\n\n  const setHtml = useCallback((html: string) => {\n    if (!html) {\n      setOverwrite((v) => !v);\n    }\n    setHtmlOverwrite(html);\n  }, [setHtmlOverwrite, setOverwrite]);\n\n  return {\n    getHtml,\n    setHtml,\n    overwrite,\n    htmlOverwrite,\n    originalSetHtml,\n  };\n}\n","import { useRef } from '../../../lib/teact/teact';\nimport { getActions, useGlobal } from '../../../global';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nexport function useShowCustomEmojiPremiumNotification() {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  const customEmojiNotificationNumber = useRef(0);\n  const { currentUserId } = useGlobal((v) => ({ currentUserId: v.currentUserId }));\n  return useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n}\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CustomPeerType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CustomPeerType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CustomPeerType[];\n  onSelectedCategoriesChange?: (categories: CustomPeerType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  categories?: UniqueCustomPeer[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = ({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) return <div key={id}>No peer or category with ID {id}</div>;\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (withStatus && peer) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n      if (withPeerTypes && peer) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import React, { type TeactNode } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {inputElement && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {avatarElement && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {subtitle && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Af3tYFMg\",\"canvas\":\"GbpiDSS_\"};","import React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { preloadImage } from '../../../util/files';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport styles from './RadialPatternBackground.module.scss';\n\ntype OwnProps = {\n  backgroundColors: string[];\n  patternColor?: string;\n  patternIcon?: ApiSticker;\n  className?: string;\n  clearBottomSector?: boolean;\n};\n\nconst RINGS = 3;\nconst BASE_RING_ITEM_COUNT = 8;\nconst RING_INCREMENT = 0.5;\nconst CENTER_EMPTINESS = 0.05;\nconst MAX_RADIUS = 0.4;\nconst BASE_ICON_SIZE = 20;\n\nconst MIN_SIZE = 250;\n\nconst RadialPatternBackground = ({\n  backgroundColors,\n  patternColor,\n  patternIcon,\n  clearBottomSector,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [getContainerSize, setContainerSize] = useSignal({ width: 0, height: 0 });\n\n  const dpr = useDevicePixelRatio();\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const previewMediaHash = patternIcon && getStickerMediaHash(patternIcon, 'preview');\n  const previewUrl = useMedia(previewMediaHash);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const patternPositions = useMemo(() => {\n    const coordinates: { x: number; y: number; sizeFactor: number }[] = [];\n    for (let ring = 1; ring <= RINGS; ring++) {\n      const ringItemCount = Math.floor(BASE_RING_ITEM_COUNT * (1 + (ring - 1) * RING_INCREMENT));\n      const ringProgress = ring / RINGS;\n      const ringRadius = CENTER_EMPTINESS + (MAX_RADIUS - CENTER_EMPTINESS) * ringProgress;\n\n      const angleShift = ring % 2 === 0 ? Math.PI / ringItemCount : 0;\n\n      for (let i = 0; i < ringItemCount; i++) {\n        const angle = (i / ringItemCount) * Math.PI * 2 + angleShift;\n\n        if (clearBottomSector && angle > Math.PI * 0.45 && angle < Math.PI * 0.55) {\n          continue;\n        }\n\n        // Slightly oval\n        const xOffset = ringRadius * 1.71 * Math.cos(angle);\n        const yOffset = ringRadius * Math.sin(angle);\n\n        const x = 0.5 + xOffset;\n        const y = 0.5 + yOffset;\n\n        const sizeFactor = 1.4 - ringProgress * Math.random();\n\n        coordinates.push({\n          x, y, sizeFactor,\n        });\n      }\n    }\n    return coordinates;\n  }, [clearBottomSector]);\n\n  useResizeObserver(containerRef, (entry) => {\n    setContainerSize({\n      width: entry.contentRect.width,\n      height: entry.contentRect.height,\n    });\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      setContainerSize({\n        width: container.clientWidth,\n        height: container.clientHeight,\n      });\n    }\n  }, [setContainerSize]);\n\n  const draw = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage) return;\n    const ctx = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n    if (!width || !height) return;\n\n    ctx.save();\n    patternPositions.forEach(({\n      x, y, sizeFactor,\n    }) => {\n      const centerShift = (width - Math.max(width, MIN_SIZE * dpr)) / 2; // Shift coords if canvas is smaller than `MIN_SIZE`\n      const renderX = x * Math.max(width, MIN_SIZE * dpr) + centerShift;\n      const renderY = y * Math.max(height, MIN_SIZE * dpr) + centerShift;\n\n      const size = BASE_ICON_SIZE * dpr * sizeFactor * (centerShift ? 0.8 : 1);\n\n      ctx.drawImage(emojiImage, renderX - size / 2, renderY - size / 2, size, size);\n    });\n    ctx.restore();\n\n    if (patternColor) {\n      ctx.save();\n      ctx.fillStyle = patternColor;\n      ctx.globalCompositeOperation = 'source-atop';\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    const radialGradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, width / 2);\n    radialGradient.addColorStop(0, '#FFFFFF77');\n    radialGradient.addColorStop(1, '#FFFFFF');\n\n    // Alpha mask\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillStyle = radialGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n  });\n\n  useEffect(() => {\n    draw();\n  }, [emojiImage]);\n\n  useEffect(() => {\n    const { width, height } = getContainerSize();\n    const canvas = canvasRef.current!;\n    if (!width || !height) {\n      return;\n    }\n\n    const maxSide = Math.max(width, height);\n    requestMutation(() => {\n      canvas.width = maxSide * dpr;\n      canvas.height = maxSide * dpr;\n\n      draw();\n    });\n  }, [getContainerSize, dpr]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(\n        `--_bg-1: ${backgroundColors[0]}`,\n        `--_bg-2: ${backgroundColors[1] || backgroundColors[0]}`,\n      )}\n    >\n      <canvas className={styles.canvas} ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(RadialPatternBackground);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\nimport Icon from '../icons/Icon';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <Icon name=\"heart\" className=\"ReactionStaticEmoji\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","export function loadShaders(\n  gl: WebGLRenderingContext,\n  shaderSources: [vertexShader: string, fragmentShader: string],\n): readonly [WebGLShader, WebGLShader] {\n  const [vertexShader, fragmentShader] = shaderSources;\n  return [\n    loadShader(gl, vertexShader, gl.VERTEX_SHADER),\n    loadShader(gl, fragmentShader, gl.FRAGMENT_SHADER),\n  ] as const;\n}\n\nfunction loadShader(\n  gl: WebGLRenderingContext,\n  shaderSource: string,\n  shaderType: number,\n): WebGLShader {\n  const shader = gl.createShader(shaderType)!;\n  gl.shaderSource(shader, shaderSource);\n  gl.compileShader(shader);\n  gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  return shader;\n}\n","import { fastRaf } from '../../util/schedulers';\nimport fragmentShader from './fragment-shader.glsl';\nimport { hexToVec3 } from './hex-to-vec3';\nimport { loadShaders } from './load-shaders';\nimport vertexShader from './vertex-shader.glsl';\n\nexport function getAnimate(canvas: HTMLCanvasElement, colors: string[]) {\n  while (colors.length < 4) {\n    colors.push('#88b884');\n  }\n  const vec3Colors = new Array<ReturnType<typeof hexToVec3>>();\n  for (const color of colors) {\n    vec3Colors.push(hexToVec3(color));\n  }\n  const gl = canvas.getContext('webgl')!;\n  if (!gl) {\n    throw new Error('WebGL not supported');\n  }\n\n  // setup GLSL program\n  const program = gl.createProgram()!;\n  if (!program) {\n    throw new Error('Unable to create WebGLProgram');\n  }\n\n  // load shaders\n  const shaders = loadShaders(gl, [vertexShader, fragmentShader]);\n  for (const shader of shaders) {\n    gl.attachShader(program, shader);\n  }\n\n  gl.linkProgram(program);\n\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    // alert('Unable to initialize the shader program.');\n  }\n\n  gl.useProgram(program);\n\n  // look up where the vertex data needs to go.\n  const positionAttributeLocation = gl.getAttribLocation(program, 'a_position');\n\n  // Create a buffer to put three 2d clip space points in\n  const positionBuffer = gl.createBuffer();\n\n  // Bind it to ARRAY_BUFFER (think of it as ARRAY_BUFFER = positionBuffer)\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n\n  // fill it with a 2 triangles that cover clipspace\n  gl.bufferData(\n    gl.ARRAY_BUFFER,\n    new Float32Array([\n      -1,\n      -1, // first triangle\n      1,\n      -1,\n      -1,\n      1,\n      -1,\n      1, // second triangle\n      1,\n      -1,\n      1,\n      1,\n    ]),\n    gl.STATIC_DRAW,\n  );\n\n  // Tell WebGL how to convert from clip space to pixels\n  gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n  // Tell it to use our program (pair of shaders)\n  gl.useProgram(program);\n\n  // Turn on the attribute\n  gl.enableVertexAttribArray(positionAttributeLocation);\n\n  // Bind the position buffer.\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n\n  // Tell the attribute how to get data out of positionBuffer (ARRAY_BUFFER)\n  gl.vertexAttribPointer(\n    positionAttributeLocation,\n    2, // 2 components per iteration\n    gl.FLOAT, // the data is 32bit floats\n    false, // don't normalize the data\n    0, // 0 = move forward size * sizeof(type) each iteration to get the next position\n    0, // start at the beginning of the buffer\n  );\n\n  const resolutionLoc = gl.getUniformLocation(program, 'resolution');\n  const color1Loc = gl.getUniformLocation(program, 'color1');\n  const color2Loc = gl.getUniformLocation(program, 'color2');\n  const color3Loc = gl.getUniformLocation(program, 'color3');\n  const color4Loc = gl.getUniformLocation(program, 'color4');\n  const color1PosLoc = gl.getUniformLocation(program, 'color1Pos');\n  const color2PosLoc = gl.getUniformLocation(program, 'color2Pos');\n  const color3PosLoc = gl.getUniformLocation(program, 'color3Pos');\n  const color4PosLoc = gl.getUniformLocation(program, 'color4Pos');\n\n  const keyPoints = [\n    [0.265, 0.582], // 0\n    [0.176, 0.918], // 1\n    [1 - 0.585, 1 - 0.164], // 0\n    [0.644, 0.755], // 1\n    [1 - 0.265, 1 - 0.582], // 0\n    [1 - 0.176, 1 - 0.918], // 1\n    [0.585, 0.164], // 0\n    [1 - 0.644, 1 - 0.755], // 1\n  ];\n  let keyShift = 0;\n  let targetColor1Pos: number[];\n  let targetColor2Pos: number[];\n  let targetColor3Pos: number[];\n  let targetColor4Pos: number[];\n\n  updateTargetColors();\n\n  function updateTargetColors() {\n    targetColor1Pos = keyPoints[keyShift % 8];\n    targetColor2Pos = keyPoints[(keyShift + 2) % 8];\n    targetColor3Pos = keyPoints[(keyShift + 4) % 8];\n    targetColor4Pos = keyPoints[(keyShift + 6) % 8];\n    keyShift = (keyShift + 1) % 8;\n  }\n\n  const color1Pos = [targetColor1Pos![0], targetColor1Pos![1]];\n  const color2Pos = [targetColor2Pos![0], targetColor2Pos![1]];\n  const color3Pos = [targetColor3Pos![0], targetColor3Pos![1]];\n  const color4Pos = [targetColor4Pos![0], targetColor4Pos![1]];\n\n  renderGradientCanvas();\n\n  function renderGradientCanvas() {\n    gl.uniform2fv(resolutionLoc, [gl.canvas.width, gl.canvas.height]);\n    gl.uniform3fv(color1Loc, vec3Colors[0]);\n    gl.uniform3fv(color2Loc, vec3Colors[1]);\n    gl.uniform3fv(color3Loc, vec3Colors[2]);\n    gl.uniform3fv(color4Loc, vec3Colors[3]);\n    gl.uniform2fv(color1PosLoc, color1Pos);\n    gl.uniform2fv(color2PosLoc, color2Pos);\n    gl.uniform2fv(color3PosLoc, color3Pos);\n    gl.uniform2fv(color4PosLoc, color4Pos);\n\n    gl.drawArrays(\n      gl.TRIANGLES,\n      0, // offset\n      6, // num vertices to process\n    );\n  }\n\n  const speed = 0.1;\n  let animating = false;\n  function animate() {\n    animating = true;\n    if (\n      distance(color1Pos, targetColor1Pos) > 0.01\n      || distance(color2Pos, targetColor2Pos) > 0.01\n      || distance(color3Pos, targetColor3Pos) > 0.01\n      || distance(color3Pos, targetColor3Pos) > 0.01\n    ) {\n      color1Pos[0] = color1Pos[0] * (1 - speed) + targetColor1Pos[0] * speed;\n      color1Pos[1] = color1Pos[1] * (1 - speed) + targetColor1Pos[1] * speed;\n      color2Pos[0] = color2Pos[0] * (1 - speed) + targetColor2Pos[0] * speed;\n      color2Pos[1] = color2Pos[1] * (1 - speed) + targetColor2Pos[1] * speed;\n      color3Pos[0] = color3Pos[0] * (1 - speed) + targetColor3Pos[0] * speed;\n      color3Pos[1] = color3Pos[1] * (1 - speed) + targetColor3Pos[1] * speed;\n      color4Pos[0] = color4Pos[0] * (1 - speed) + targetColor4Pos[0] * speed;\n      color4Pos[1] = color4Pos[1] * (1 - speed) + targetColor4Pos[1] * speed;\n      renderGradientCanvas();\n      requestAnimationFrame(animate);\n    } else {\n      animating = false;\n    }\n  }\n\n  return () => {\n    updateTargetColors();\n    if (!animating) {\n      fastRaf(animate);\n    }\n  };\n}\n\nfunction distance(p1: number[], p2: number[]) {\n  return Math.sqrt(\n    // (p1[0] - p2[0]) * (p1[0] - p2[0]),\n    (p1[1] - p2[1]) * (p1[1] - p2[1]),\n  );\n}\n","export function hexToVec3(\n  hex: string\n): readonly [r: number, g: number, b: number] {\n  if (hex.startsWith('#')) {\n    hex = hex.slice(1)\n  }\n\n  const r = parseInt(hex.slice(0, 2), 16)\n  const g = parseInt(hex.slice(2, 4), 16)\n  const b = parseInt(hex.slice(4, 6), 16)\n\n  return [r, g, b] as const\n}\n","export default `// an attribute will receive data from a buffer\nattribute vec4 a_position;\n\n// all shaders have a main function\nvoid main() {\n\n  // gl_Position is a special variable a vertex shader\n  // is responsible for setting\n  gl_Position = a_position;\n}\n`;\n","export default `precision highp float;\n\nuniform vec2 resolution;\n\nuniform vec3 color1;\nuniform vec3 color2;\nuniform vec3 color3;\nuniform vec3 color4;\n\nuniform vec2 color1Pos;\nuniform vec2 color2Pos;\nuniform vec2 color3Pos;\nuniform vec2 color4Pos;\n\nvoid main() {\n  vec2 position = gl_FragCoord.xy / resolution.xy;\n  position.y = 1.0 - position.y;\n\n  float dp1 = distance(position, color1Pos);\n  float dp2 = distance(position, color2Pos);\n  float dp3 = distance(position, color3Pos);\n  float dp4 = distance(position, color4Pos);\n  float minD = min(dp1, min(dp2, min(dp3, dp4)));\n  float p = 3.0;\n\n  dp1 = pow(1.0 - (dp1 - minD), p);\n  dp2 = pow(1.0 - (dp2 - minD), p);\n  dp3 = pow(1.0 - (dp3 - minD), p);\n  dp4 = pow(1.0 - (dp4 - minD), p);\n  float dpt = abs(dp1 + dp2 + dp3 + dp4);\n\n  gl_FragColor =\n    (vec4(color1 / 255.0, 1.0) * dp1 / dpt) +\n    (vec4(color2 / 255.0, 1.0) * dp2 / dpt) +\n    (vec4(color3 / 255.0, 1.0) * dp3 / dpt) +\n    (vec4(color4 / 255.0, 1.0) * dp4 / dpt);\n}\n`\n","// extracted by mini-css-extract-plugin\nexport default {\"mask\":\"l2PQ3Ztp\",\"cover\":\"EfnMDw93\"};","import React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport { getAnimate } from '../../lib/twallpaper-webgl';\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './BackgroundGradient.module.scss';\n\n// eslint-disable-next-line no-spaced-func\nconst instances = new Map<HTMLCanvasElement, () => void>();\nfunction BackgroundGradient({\n  colors,\n  size,\n  maskImage,\n  cover,\n  noAnimate,\n}: { colors?: string[]; size?: number; maskImage?: string; cover?: boolean; noAnimate?: boolean }) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  useEffect(() => {\n    if (!colors) {\n      return () => {};\n    }\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return () => {};\n    }\n    if (noAnimate) {\n      getAnimate(canvas, colors ?? []);\n      return () => {};\n    }\n    let currentInstance = instances.get(canvas);\n    if (!currentInstance) {\n      currentInstance = getAnimate(canvas, colors ?? []);\n      instances.set(canvas, currentInstance);\n    }\n    return () => instances.delete(canvas);\n  }, [canvasRef, colors, noAnimate, cover]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={size}\n      height={size}\n      className={buildClassName(maskImage && styles.mask, cover && styles.cover)}\n      style={maskImage ? `--mask-image: ${maskImage}` : undefined}\n    />\n  );\n}\n\nexport default memo(BackgroundGradient);\n\nexport function toNextPositionGlobal() {\n  for (const instance of instances.values()) {\n    instance();\n  }\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getPhotoMediaHash, getVideoProfilePhotoMediaHash } from '../../global/helpers';\nimport { fetchBlob } from '../../util/files';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useOldLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const photo = message.content.action!.photo!;\n  const suggestedPhotoUrl = useMedia(getPhotoMediaHash(photo, 'full'));\n  const suggestedVideoUrl = useMedia(getVideoProfilePhotoMediaHash(photo));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    if (!suggestedVideoUrl) return;\n\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const blob = await fetchBlob(suggestedVideoUrl);\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetchBlob(suggestedPhotoUrl));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        messageId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageUpdatedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleViewUpdatedAvatar = () => {\n    openMediaViewer({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: MAIN_THREAD_ID,\n      origin: MediaViewerOrigin.SuggestedAvatar,\n    });\n  };\n\n  return (\n    <>\n      <span>{renderContent()}</span>\n      <span\n        className=\"action-message-updated-avatar\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleViewUpdatedAvatar}\n        aria-label={lang('ViewPhotoAction')}\n      >\n        <Avatar\n          photo={message.content.action!.photo}\n          loopIndefinitely\n          withVideo\n          size=\"jumbo\"\n        />\n      </span>\n    </>\n  );\n};\n\nexport default memo(ActionMessageUpdatedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n}: StateProps & OwnProps) => {\n  const lang = useOldLang();\n  const { toggleChannelRecommendations, loadChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useEffect(() => {\n    if (!similarChannelIds) {\n      loadChannelRecommendations({ chatId });\n    }\n  }, [chatId, similarChannelIds]);\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  });\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <Icon name=\"user-filled\" className={styles.icon} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useOldLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n    };\n  })(SimilarChannels),\n);\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiPeer } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(peer: ApiPeer, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(peer), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useUnmountCleanup,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageActionStarGift, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, MessageListType, ThreadId } from '../../types';\nimport type { OnIntersectPinnedMessage } from './hooks/usePinnedMessage';\n\nimport {\n  getChatTitle, getMessageHtmlId, getPeerTitle, isJoinedChannelMessage,\n} from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectGiftStickerForStars,\n  selectIsCurrentUserPremium,\n  selectIsMessageFocused,\n  selectPeer,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatInteger, formatIntegerCompact } from '../../util/textFormat';\nimport { getGiftAttributes, getStickerFromGift } from '../common/helpers/gifts';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\nimport useMessageResizeObserver from '../../hooks/useResizeMessageObserver';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport Avatar from '../common/Avatar';\nimport GiftRibbon from '../common/gift/GiftRibbon';\nimport RadialPatternBackground from '../common/profile/RadialPatternBackground';\nimport Sparkles from '../common/Sparkles';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ActionMessageUpdatedAvatar from './ActionMessageUpdatedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport Reactions from './message/reactions/Reactions';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  starsGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n  patternColor?: string;\n  currentUserId?: string;\n  isCurrentUserPremium?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  threadId,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  starsGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  patternColor,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onIntersectPinnedMessage,\n  currentUserId,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openPremiumModal,\n    requestConfetti,\n    checkGiftCode,\n    getReceipt,\n    openGiftInfoModalFromMessage,\n    openPrizeStarsTransactionFromGiveaway,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage({\n    elementRef: ref,\n    chatId: message.chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isJustAdded,\n  });\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [message.id] });\n    }\n  });\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isUpdatedAvatar = message.content.action?.type === 'updateProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n  const isStarsGift = message.content.action?.type === 'giftStars';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isStarGiftUnique = message.content.action?.type === 'starGiftUnique';\n  const isPrizeStars = message.content.action?.type === 'prizeStars';\n\n  const withServiceReactions = Boolean(message.areReactionsPossible && message?.reactions);\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isPremiumGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({ withStars: true });\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransitionDeprecated(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      oldLang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, message, observeIntersectionForLoading, observeIntersectionForPlaying, oldLang,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleStarGiftClick = () => {\n    const starGift = message.content.action?.starGift;\n    if (!starGift) return;\n\n    openGiftInfoModalFromMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handlePrizeStarsClick = () => {\n    openPrizeStarsTransactionFromGiveaway({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  const handleClick = () => {\n    if (message.content.action?.type === 'receipt') {\n      getReceipt({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    }\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    const giftMessage = message.content.action?.message;\n    return (\n      <span\n        className=\"action-message-gift\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handlePremiumGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{oldLang('ActionGiftPremiumTitle')}</strong>\n        <span>\n          {oldLang('ActionGiftPremiumSubtitle', oldLang('Months', message.content.action?.months, 'i'))}\n        </span>\n        {giftMessage && (\n          <div className=\"action-message-gift-subtitle\">\n            {renderTextWithEntities({ text: giftMessage.text, entities: giftMessage.entities })}\n          </div>\n        )}\n\n        <span className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {oldLang('ActionGiftPremiumView')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    const giftMessage = message.content.action?.message;\n    return (\n      <span\n        className=\"action-message-gift action-message-centered\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>\n          {oldLang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}\n        </strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(\n            oldLang(\n              isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n                ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n              getChatTitle(oldLang, targetChat),\n            ),\n            ['simple_markdown'],\n          )}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(oldLang(\n            'BoostingUnclaimedPrizeDuration',\n            oldLang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        {giftMessage && (\n          <div className=\"action-message-gift-subtitle\">\n            {renderTextWithEntities({ text: giftMessage.text, entities: giftMessage.entities })}\n          </div>\n        )}\n\n        <span className=\"action-message-button\">\n          {oldLang('BoostingReceivedGiftOpenBtn')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderStarsGift() {\n    return (\n      <span\n        className=\"action-message-gift action-message-centered\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleStarGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={starsGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <div className=\"action-message-stars-balance\">\n          {formatInteger(message.content.action!.stars!)}\n          <strong>{oldLang('Stars')}</strong>\n        </div>\n        <span className=\"action-message-stars-subtitle\">\n          {renderText(\n            oldLang(!message.isOutgoing\n              ? 'ActionGiftStarsSubtitleYou' : 'ActionGiftStarsSubtitle', getChatTitle(oldLang, targetChat!)),\n            ['simple_markdown'],\n          )}\n        </span>\n        <span className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {oldLang('ActionGiftPremiumView')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderStarGiftUserCaption() {\n    const starGift = message.content.action?.starGift;\n    if (!starGift) return undefined;\n    const { fromId, peerId } = starGift;\n\n    const fromPeer = fromId ? selectPeer(getGlobal(), fromId) : undefined;\n    const targetPeer = peerId\n      ? selectPeer(getGlobal(), peerId)\n      : starGift.type === 'starGiftUnique' && !message.isOutgoing\n        ? targetChat : undefined;\n\n    if (targetPeer && targetPeer.id !== currentUserId) {\n      return (\n        <div className=\"action-message-user-caption\">\n          <span> {lang('GiftTo')} </span>\n          {starGift.type === 'starGift' && (\n            <Avatar className=\"action-message-user-avatar\" size=\"micro\" peer={targetPeer} />\n          )}\n          <span> {getPeerTitle(lang, targetPeer)} </span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"action-message-user-caption\">\n        <span> {lang('GiftFrom')} </span>\n        {starGift.type === 'starGift' && (\n          <Avatar className=\"action-message-user-avatar\" size=\"micro\" peer={fromPeer || senderUser} />\n        )}\n        <span> {getPeerTitle(lang, fromPeer || senderUser!)} </span>\n      </div>\n    );\n  }\n\n  function renderStarGiftUserDescription() {\n    const starGift = message.content.action?.starGift as ApiMessageActionStarGift;\n    const targetChatTitle = targetChat && getPeerTitle(lang, targetChat);\n    const starGiftMessage = starGift?.message;\n    if (!starGift) return undefined;\n\n    if (starGiftMessage) {\n      return renderTextWithEntities({ text: starGiftMessage.text, entities: starGiftMessage.entities });\n    }\n    const amountToConvert = starGift?.starsToConvert;\n\n    if (starGift.isSaved) {\n      return lang(starGift.savedId ? 'ActionStarGiftChannelDisplaying' : 'ActionStarGiftDisplaying');\n    }\n\n    if (starGift.isUpgraded) {\n      return lang('ActionStarGiftUpgraded');\n    }\n\n    if (message.isOutgoing) {\n      if (amountToConvert) {\n        return lang('ActionStarGiftPeerOutDescription', {\n          peer: targetChatTitle || 'Someone',\n          count: amountToConvert,\n        }, { withNodes: true, pluralValue: amountToConvert });\n      }\n\n      if (starGift.canUpgrade) {\n        return lang('ActionStarGiftPeerOutDescriptionUpgrade', {\n          peer: targetChatTitle || 'Someone',\n        });\n      }\n    }\n\n    if (starGift.isConverted) {\n      return message.isOutgoing\n        ? lang('GiftInfoPeerDescriptionOutConverted', {\n          amount: formatInteger(amountToConvert!),\n          peer: targetChatTitle || 'Chat',\n        }, {\n          pluralValue: amountToConvert!,\n          withNodes: true,\n          withMarkdown: true,\n        })\n        : lang('GiftInfoDescriptionConverted', {\n          amount: formatInteger(amountToConvert!),\n        }, {\n          pluralValue: amountToConvert!,\n          withNodes: true,\n          withMarkdown: true,\n        });\n    }\n\n    if (amountToConvert) {\n      return lang('ActionStarGiftDescription2', {\n        count: amountToConvert,\n      }, { withNodes: true, pluralValue: amountToConvert });\n    }\n\n    if (starGift.canUpgrade) {\n      return lang('ActionStarGiftDescriptionUpgrade');\n    }\n\n    return undefined;\n  }\n\n  function renderStarGift() {\n    const starGift = message.content.action?.starGift as ApiMessageActionStarGift;\n    if (!starGift || starGift.gift.type !== 'starGift') return undefined;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-centered\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleStarGiftClick}\n      >\n\n        <AnimatedIconFromSticker\n          sticker={starGift.gift.sticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n          size={STAR_GIFT_STICKER_SIZE}\n        />\n\n        {renderStarGiftUserCaption()}\n        <div className=\"action-message-gift-subtitle\">\n          {renderStarGiftUserDescription()}\n        </div>\n\n        <div className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {starGift.alreadyPaidUpgradeStars && (!message.isOutgoing || targetUsers?.[0]?.isSelf)\n            ? lang('ActionStarGiftUnpack') : oldLang('ActionGiftPremiumView')}\n        </div>\n        {starGift.gift.availabilityTotal && (\n          <GiftRibbon\n            color={patternColor || 'blue'}\n            text={oldLang('Gift2Limited1OfRibbon', formatIntegerCompact(starGift.gift.availabilityTotal))}\n          />\n        )}\n      </span>\n    );\n  }\n\n  function renderStarGiftUnique() {\n    const starGift = message.content.action?.starGift;\n    if (!starGift || starGift.gift.type !== 'starGiftUnique') return undefined;\n\n    const sticker = getStickerFromGift(starGift.gift)!;\n    const attributes = getGiftAttributes(starGift.gift);\n    const { backdrop, pattern, model } = attributes || {};\n\n    if (!backdrop || !pattern || !model) return undefined;\n\n    const backgroundColors = [backdrop.centerColor, backdrop.edgeColor];\n\n    const adaptedPatternColor = `${backdrop.patternColor.slice(0, 7)}55`;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-centered action-message-unique\"\n        tabIndex={0}\n        role=\"button\"\n        style={`--pattern-color: ${adaptedPatternColor}`}\n        onClick={handleStarGiftClick}\n      >\n        <div className=\"action-message-unique-background-wrapper\">\n          <RadialPatternBackground\n            className=\"action-message-unique-background\"\n            backgroundColors={backgroundColors}\n            patternColor={backdrop.patternColor}\n            patternIcon={pattern.sticker}\n            clearBottomSector\n          />\n        </div>\n        <AnimatedIconFromSticker\n          sticker={sticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n          size={STAR_GIFT_STICKER_SIZE}\n        />\n        {renderStarGiftUserCaption()}\n        <div className=\"action-message-unique-title\" style={`color: ${backdrop.textColor}`}>\n          {starGift.gift.title} #{starGift.gift.number}\n        </div>\n        <div className=\"action-message-unique-properties\" style={`color: ${backdrop.textColor}`}>\n          <div className=\"action-message-unique-property\">\n            {oldLang('Gift2AttributeModel')}\n          </div>\n          <div className=\"action-message-unique-value\">\n            {model.name}\n          </div>\n          <div className=\"action-message-unique-property\">\n            {oldLang('Gift2AttributeBackdrop')}\n          </div>\n          <div className=\"action-message-unique-value\">\n            {backdrop.name}\n          </div>\n          <div className=\"action-message-unique-property\">\n            {oldLang('Gift2AttributeSymbol')}\n          </div>\n          <div className=\"action-message-unique-value\">\n            {pattern.name}\n          </div>\n        </div>\n\n        <div className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {oldLang('Gift2UniqueView')}\n        </div>\n        <GiftRibbon\n          color={adaptedPatternColor}\n          text={oldLang('ActionStarGift')}\n        />\n      </span>\n    );\n  }\n\n  function renderPrizeStars() {\n    const isUnclaimed = message.content.action?.isUnclaimed;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-centered\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handlePrizeStarsClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={starsGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>\n          {oldLang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}\n        </strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(oldLang(isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize', getChatTitle(oldLang, targetChat)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'PrizeCredits2', {\n              count: (\n                <b>{formatInteger(message.content.action?.stars!)}</b>\n              ),\n            }, {\n              withNodes: true,\n              pluralValue: message.content.action?.stars!,\n            },\n          ), ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-button\">{\n          oldLang('ActionGiftPremiumView')\n        }\n        </span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isPremiumGift || isSuggestedAvatar || isUpdatedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && !isUpdatedAvatar && (\n        <span className=\"action-message-content\" onClick={handleClick}>{renderContent()}</span>\n      )}\n      {isPremiumGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isStarsGift && renderStarsGift()}\n      {isStarGift && renderStarGift()}\n      {isStarGiftUnique && renderStarGiftUnique()}\n      {isPrizeStars && renderPrizeStars()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isUpdatedAvatar && (\n        <ActionMessageUpdatedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n      {withServiceReactions && (\n        <Reactions\n          isOutside\n          message={message!}\n          threadId={threadId}\n          observeIntersection={observeIntersectionForPlaying}\n          isCurrentUserPremium={isCurrentUserPremium}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const theme = selectTheme(global);\n    const {\n      patternColor,\n    } = global.settings.themes[theme] || {};\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const senderUser = selectUser(global, senderId || chatId);\n    const senderChat = selectChat(global, chatId);\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n\n    const starCount = content.action?.stars;\n    const starsGiftSticker = selectGiftStickerForStars(global, starCount);\n\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      starsGiftSticker,\n      topic,\n      patternColor,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      currentUserId: global.currentUserId,\n    };\n  },\n)(ActionMessage));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_8sFuAomM\",\"emojiButton\":\"crWzZ2jr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId?: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = chatId ? selectIsChatWithSelf(global, chatId) : false;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji/emoji';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/visibility/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, ReactNode, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { type ApiFormattedText, ApiMessageEntityTypes, type ApiSticker } from '../../../api/types';\n\nimport { BASE_EMOJI_KEYWORD_LANG } from '../../../config';\nimport { requestForcedReflow, requestMutation, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from '../../common/helpers/renderTextWithEntities';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useShowCustomEmojiPremiumNotification } from '../../common/hooks/useShowCustomEmojiPremiumNotification';\nimport useClipboardPaste from './hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport CustomEmojiTooltip from './CustomEmojiTooltip';\nimport EmojiTooltip from './EmojiTooltip';\nimport TextFormatter from './TextFormatter.async';\n\nimport './RichTextInput.scss';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  customEmojiPrefix: string;\n  inputId: string;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  htmlOverwrite: Signal<string>;\n  overwrite: boolean;\n  placeholder?: string;\n  placeholderComponent?: ReactNode;\n  shouldSuppressTextFormatter?: boolean;\n  onUpdate: (html: string) => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  limitIndicator?: string;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n  disableTextFormatter?: boolean;\n  isEditable?: boolean;\n  maxInputHeight?: number;\n  forcedPlaceholder?: string;\n  shouldSuppressFocus?: boolean;\n  onSuppressedFocus?: () => void;\n  containerId?: string;\n  onClick?: () => void;\n  onKeyDown?: (\n    (e: React.KeyboardEvent<HTMLDivElement>) => { processSelection: true } | { closeTextFormatter: true } | void\n  );\n  isReady?: boolean;\n  className?: string;\n  singleLine?: boolean;\n  label?: string;\n  handlePaste?: boolean;\n  disabledEntities?: ApiMessageEntityTypes[];\n  chatId?: string;\n  canUseEmojiTooltip?: boolean;\n  canRenderEmojiTooltip?: boolean;\n  cannotInsertHtml?: boolean;\n  children?: ReactNode;\n  canPlayAnimatedEmojis?: boolean;\n};\n\ntype StateProps = {\n  canPlayAnimatedEmojisGlobal: boolean;\n  isCurrentUserPremium: boolean;\n  recentEmojis: string[];\n  customEmojiForEmoji?: ApiSticker[];\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n};\n\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n\nconst RichTextInput: FC<OwnProps & StateProps> = ({\n  ref,\n  captionLimit,\n  limitIndicator,\n  inputId,\n  isActive,\n  getHtml,\n  htmlOverwrite,\n  placeholder,\n  placeholderComponent,\n  shouldSuppressTextFormatter,\n  onUpdate,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n  overwrite,\n  disableTextFormatter,\n  isEditable = true,\n  maxInputHeight = Number.POSITIVE_INFINITY,\n  forcedPlaceholder,\n  shouldSuppressFocus,\n  onSuppressedFocus,\n  containerId,\n  onClick,\n  onKeyDown,\n  isReady,\n  customEmojiPrefix,\n  canPlayAnimatedEmojis,\n  canPlayAnimatedEmojisGlobal,\n  className: className_,\n  singleLine,\n  label,\n  isCurrentUserPremium,\n  handlePaste = true,\n  disabledEntities,\n  customEmojiForEmoji,\n  canUseEmojiTooltip,\n  chatId,\n  canRenderEmojiTooltip = true,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  cannotInsertHtml,\n  children,\n}) => {\n  const { addRecentCustomEmoji, addRecentEmoji } = getActions();\n  disabledEntities ??= [];\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    updateInputHeight(false);\n  }, [maxInputHeight]);\n\n  const htmlRef = useRef(htmlOverwrite());\n  useLayoutEffect(() => {\n    const html = isActive ? htmlOverwrite() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n\n      updateCloneRef();\n      updateInputHeight(!html);\n      onUpdate(html);\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n    }\n  }, [htmlOverwrite, isActive, updateInputHeight, onUpdate, overwrite]);\n\n  // const chatIdRef = useRef(chatId);\n  // chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, inputId)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (singleLine && e.key === 'Enter') {\n      e.preventDefault();\n    }\n    updateInputHeight(false);\n    if (!onKeyDown) {\n      processSelectionWithTimeout();\n      return;\n    }\n    const result = onKeyDown(e);\n    if (result && typeof result === 'object') {\n      if ('processSelection' in result && result.processSelection) {\n        processSelectionWithTimeout();\n      } else if ('closeTextFormatter' in result && result.closeTextFormatter) {\n        closeTextFormatter();\n      }\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n\n    updateCloneRef();\n  }\n\n  function updateCloneRef() {\n    if (cloneRef.current!.innerHTML !== inputRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = inputRef.current!.innerHTML;\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n    singleLine && 'single-line',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      wrapperRef.current?.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    !!(canPlayAnimatedEmojis && canPlayAnimatedEmojisGlobal),\n    isReady,\n    isActive,\n  );\n\n  const [isFocused, setIsFocused] = useState(false);\n  useEffect(() => {\n    const input = inputRef.current;\n    function handleFocus() {\n      setIsFocused(true);\n    }\n    function handleBlur() {\n      setIsFocused(false);\n    }\n\n    input?.addEventListener('focus', handleFocus);\n    input?.addEventListener('blur', handleBlur);\n    if (input) {\n      setIsFocused(document.activeElement === input);\n    }\n    return () => [\n      input?.removeEventListener('focus', handleFocus),\n      input?.removeEventListener('blur', handleBlur),\n    ];\n  }, [inputRef]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = inputId) => {\n    if (inInputId === inputId && cannotInsertHtml) return;\n    if (disabledEntities.length) {\n      newHtml = removeDisabledEntities(newHtml, disabledEntities);\n    }\n    const messageInput = document.getElementById(inInputId) as HTMLDivElement;\n\n    document.execCommand('insertHTML', false, newHtml);\n    messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = inputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const showCustomEmojiPremiumNotification = useShowCustomEmojiPremiumNotification();\n  const hook: typeof useClipboardPaste = handlePaste ? useClipboardPaste : () => {};\n  hook(\n    inputId,\n    isActive,\n    insertFormattedTextAndUpdateCursor,\n    () => {},\n    () => {},\n    undefined,\n    !isCurrentUserPremium,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const getSelectionRange = useGetSelectionRange(`#${inputId}`);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && canUseEmojiTooltip),\n    getHtml,\n    inputId,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && canUseEmojiTooltip),\n    getHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  return (\n    <div\n      id={containerId}\n      ref={wrapperRef}\n      className={buildClassName(\n        'rich-text-input input-group',\n        className_,\n        label && 'with-label',\n        (isTouched || isFocused) && 'touched',\n      )}\n      onClick={shouldSuppressFocus ? onSuppressedFocus : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={onClick}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={inputId}\n            className={className}\n            contentEditable={isEditable}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {placeholderComponent ?? placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      {label && (\n        <label htmlFor={inputId}>{label}</label>\n      )}\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {(captionLimit !== undefined || limitIndicator !== undefined) && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit || limitIndicator}\n        </div>\n      )}\n      {!disableTextFormatter && (\n        <TextFormatter\n          isOpen={isTextFormatterOpen}\n          anchorPosition={textFormatterAnchorPosition}\n          selectedRange={selectedRange}\n          setSelectedRange={setSelectedRange}\n          onClose={handleCloseTextFormatter}\n          input={inputRef.current || undefined}\n          getHtml={getHtml}\n          disabledEntities={disabledEntities}\n        />\n      )}\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n      {canRenderEmojiTooltip && (\n        <>\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${inputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${inputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </>\n      )}\n      {children}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { language } = global.settings.byKey;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    return {\n      canPlayAnimatedEmojisGlobal: selectCanPlayAnimatedEmojis(global),\n      isCurrentUserPremium,\n      recentEmojis: global.recentEmojis,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n\n    };\n  },\n)(RichTextInput));\n\nconst entityTypeToSelctorMap: Record<string, string> = {\n  [ApiMessageEntityTypes.Bold]: 'b',\n  [ApiMessageEntityTypes.Code]: 'code',\n  [ApiMessageEntityTypes.Italic]: 'i',\n  [ApiMessageEntityTypes.Pre]: 'pre',\n  [ApiMessageEntityTypes.Url]: 'a',\n  [ApiMessageEntityTypes.Underline]: 'u',\n  [ApiMessageEntityTypes.Spoiler]: 'span.spoiler',\n  [ApiMessageEntityTypes.CustomEmoji]: 'img.custom-emoji',\n};\nfunction removeDisabledEntities(html: string, disabledEntities: ApiMessageEntityTypes[]) {\n  disabledEntities = Array.from(new Set(disabledEntities));\n  const body = new DOMParser().parseFromString(html, 'text/html').body;\n  for (const disabledEntity of disabledEntities) {\n    const selector = entityTypeToSelctorMap[disabledEntity];\n    if (!selector) {\n      continue;\n    }\n    let found = true;\n    do {\n      found = false;\n      for (const match of body.querySelectorAll(selector)) {\n        match.replaceWith(...match.childNodes);\n        found = true;\n      }\n    } while (found);\n  }\n  return body.innerHTML;\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","import { EDITABLE_INPUT_ID } from '../../../../config';\n\nexport function getSelectedBlockquote() {\n  const selection = window.getSelection();\n  if (!selection || selection.focusNode !== selection.anchorNode) {\n    return undefined;\n  }\n\n  let element: Node | null = selection.focusNode;\n  while (element) {\n    if (element instanceof HTMLElement && element.id === EDITABLE_INPUT_ID) {\n      break;\n    }\n    if (element instanceof HTMLQuoteElement) {\n      return element;\n    }\n    element = element.parentElement;\n  }\n  return undefined;\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\nimport { getSelectedBlockquote } from './getSelectedBlockquote';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  if (getSelectedBlockquote()) {\n    fragment.querySelectorAll('blockquote').forEach((v) => v.remove());\n  }\n  let found = true;\n  do {\n    found = false;\n    for (const blockquote of fragment.querySelectorAll('blockquote')) {\n      for (const nested of blockquote.querySelectorAll('blockquote')) {\n        found = true;\n        nested.replaceWith(...nested.childNodes);\n      }\n    }\n  } while (found);\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n  GIFT_MESSAGE_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([\n  EDITABLE_INPUT_ID,\n  EDITABLE_INPUT_MODAL_ID,\n  EDITABLE_STORY_INPUT_ID,\n  GIFT_MESSAGE_INPUT_ID,\n]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  inputId: string,\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id) || input.id !== inputId) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n\n    const selection = window.getSelection()!;\n    for (let i = 0; i < count; ++i) {\n      selection.modify('extend', 'backward', 'character');\n    }\n    document.execCommand('insertHTML', false, buildCustomEmojiHtml(emoji).repeat(count));\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']).join('')\n        : buildCustomEmojiHtml(emoji);\n      const selection = window.getSelection()!;\n      for (let i = 0; i < html.length - atIndex; ++i) {\n        selection.modify('extend', 'backward', 'character');\n      }\n      document.execCommand('insertHTML', false, emojiHtml);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  useEffect(() => {\n    if (!isActive) setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n  }, [isActive, shouldRemoveSelectionOnReset]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\nimport { toNextPositionGlobal } from '../../../main/BackgroundGradient';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n}: {\n  elementRef: { current: HTMLDivElement | null };\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        toNextPositionGlobal();\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiReaction, ApiReactionPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_ANDROID, IS_IOS } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AnimatedIcon from '../AnimatedIcon';\nimport StarIcon from '../icons/StarIcon';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReactionPaid;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  localAmount?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst EFFECT_SIZE = 6.5 * REM;\nconst MAX_EFFECT_COUNT = (IS_IOS || IS_ANDROID) ? 2 : 5;\nconst QUALITY = (IS_IOS || IS_ANDROID) ? 2 : 3;\n\nconst PaidReactionEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  localAmount,\n  withEffects,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const [effectsIds, setEffectsIds] = useState<number[]>([]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction,\n  );\n  const canAddMoreEffects = effectsIds.length < MAX_EFFECT_COUNT;\n\n  useEffectWithPrevDeps(([prevLocalAmount]) => {\n    if (!shouldPlayEffect) {\n      setEffectsIds([]);\n      return;\n    }\n\n    if (!localAmount || localAmount <= (prevLocalAmount || 0)) {\n      return;\n    }\n\n    if (canAddMoreEffects) {\n      setEffectsIds((prev) => [...prev, Date.now()]);\n    }\n  }, [localAmount, canAddMoreEffects, shouldPlayEffect]);\n\n  const {\n    shouldRender: shouldRenderEffect,\n  } = useShowTransition({\n    ref: effectRef,\n    noMountTransition: true,\n    isOpen: shouldPlayEffect,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  const handleEnded = useLastCallback(() => {\n    const newEffectsIds = effectsIds.slice(1);\n    setEffectsIds(newEffectsIds);\n    if (!newEffectsIds.length) {\n      stopActiveReaction({ containerId, reaction });\n    }\n  });\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref} teactFastList>\n      <StarIcon key=\"icon\" type=\"gold\" size=\"adaptive\" style={`width: ${size}px; height: ${size}px`} />\n      {shouldRenderEffect && effectsIds.map((id) => (\n        <AnimatedIcon\n          key={id}\n          ref={effectRef}\n          className={styles.effect}\n          size={effectSize}\n          tgsUrl={LOCAL_TGS_URLS.StarReactionEffect}\n          play={isIntersecting}\n          noLoop\n          forceAlways\n          nonInteractive\n          quality={QUALITY}\n          onEnded={handleEnded}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      withEffects,\n    };\n  },\n)(PaidReactionEmoji));\n","import React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { isReactionChosen } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useShowTransition from '../../../../hooks/useShowTransition';\n\nimport AnimatedCounter from '../../../common/AnimatedCounter';\nimport AvatarList from '../../../common/AvatarList';\nimport PaidReactionEmoji from '../../../common/reactions/PaidReactionEmoji';\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport Sparkles from '../../../common/Sparkles';\nimport Button from '../../../ui/Button';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst MAX_SCALE = 3;\n\ntype OwnProps = {\n  chatId: string;\n  messageId: number;\n  reaction: ApiReactionCount;\n  containerId: string;\n  isOwnMessage?: boolean;\n  recentReactors?: ApiPeer[];\n  className?: string;\n  chosenClassName?: string;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onPaidClick?: (count: number) => void;\n};\n\nfunction selectStarsState(global: GlobalState) {\n  return global.stars;\n}\n\nconst ReactionButton = ({\n  reaction,\n  containerId,\n  isOwnMessage,\n  recentReactors,\n  className,\n  chosenClassName,\n  chatId,\n  messageId,\n  observeIntersection,\n  onClick,\n  onPaidClick,\n}: OwnProps) => {\n  const {\n    openStarsBalanceModal,\n    resetLocalPaidReactions,\n    openPaidReactionModal,\n    requestWave,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const counterRef = useRef<HTMLSpanElement>(null);\n  const animationRef = useRef<Animation>();\n\n  const isPaid = reaction.reaction.type === 'paid';\n\n  const starsState = useSelector(selectStarsState);\n  const areStarsLoaded = Boolean(starsState);\n\n  const handlePaidClick = useLastCallback((count = 1) => {\n    onPaidClick?.(count);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (reaction.reaction.type === 'paid') {\n      e.stopPropagation(); // Prevent default message double click behavior\n      handlePaidClick();\n\n      return;\n    }\n\n    onClick?.(reaction.reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      openPaidReactionModal({\n        chatId,\n        messageId,\n      });\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, isContextMenuOpen, chatId, messageId]);\n\n  useEffectWithPrevDeps(([prevReaction]) => {\n    const amount = reaction.localAmount;\n    const button = ref.current;\n    if (!amount || !button || amount === prevReaction?.localAmount) return;\n\n    if (areStarsLoaded && amount > starsState.balance.amount) {\n      openStarsBalanceModal({\n        originReaction: {\n          chatId,\n          messageId,\n          amount,\n        },\n      });\n      resetLocalPaidReactions({\n        chatId,\n        messageId,\n      });\n      return;\n    }\n\n    if (reaction.localAmount) {\n      const { left, top } = button.getBoundingClientRect();\n      const startX = left + button.offsetWidth / 2;\n      const startY = top + button.offsetHeight / 2;\n      requestWave({ startX, startY });\n    }\n\n    const currentScale = Number(getComputedStyle(button).scale) || 1;\n    animationRef.current?.cancel();\n    // Animate scaling by 20%, and then returning to 1\n    animationRef.current = button.animate([\n      { scale: currentScale },\n      { scale: Math.min(currentScale * 1.2, MAX_SCALE), offset: 0.2 },\n      { scale: 1 },\n    ], {\n      duration: 500 * currentScale,\n      easing: 'ease-out',\n    });\n  }, [reaction, starsState?.balance, areStarsLoaded, chatId, messageId]);\n\n  const prevAmount = usePrevious(reaction.localAmount);\n\n  const {\n    shouldRender: shouldRenderPaidCounter,\n  } = useShowTransition({\n    isOpen: Boolean(reaction.localAmount),\n    ref: counterRef,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        isOwnMessage && styles.own,\n        isPaid && styles.paid,\n        isReactionChosen(reaction) && styles.chosen,\n        isReactionChosen(reaction) && chosenClassName,\n        className,\n      )}\n      size=\"tiny\"\n      ref={ref}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      onClick={handleClick}\n    >\n      {reaction.reaction.type === 'paid' ? (\n        <>\n          <Sparkles preset=\"button\" />\n          <PaidReactionEmoji\n            className={styles.animatedEmoji}\n            containerId={containerId}\n            reaction={reaction.reaction}\n            size={REACTION_SIZE}\n            localAmount={reaction.localAmount}\n            observeIntersection={observeIntersection}\n          />\n          {shouldRenderPaidCounter && (\n            <AnimatedCounter\n              ref={counterRef}\n              text={`+${formatIntegerCompact(reaction.localAmount || prevAmount!)}`}\n              className={styles.paidCounter}\n            />\n          )}\n        </>\n      ) : (\n        <ReactionAnimatedEmoji\n          className={styles.animatedEmoji}\n          containerId={containerId}\n          reaction={reaction.reaction}\n          size={REACTION_SIZE}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {recentReactors?.length ? (\n        <AvatarList size=\"mini\" peers={recentReactors} />\n      ) : (\n        <AnimatedCounter\n          text={formatIntegerCompact(reaction.count + (reaction.localAmount || 0))}\n          className={styles.counter}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default memo(ReactionButton);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { ThreadId } from '../../../../types';\n\nimport { getReactionKey, isReactionChosen } from '../../../../global/helpers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { getMessageKey } from '../../../../util/keys/messageKey';\n\nimport useEffectOnce from '../../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionButton from './ReactionButton';\nimport SavedTagButton from './SavedTagButton';\n\nimport './Reactions.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  isOutside?: boolean;\n  maxWidth?: number;\n  metaChildren?: React.ReactNode;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  isCurrentUserPremium?: boolean;\n  observeIntersection?: ObserveFn;\n  noRecentReactors?: boolean;\n};\n\nconst MAX_RECENT_AVATARS = 3;\nconst PAID_SEND_DELAY = 5000;\n\nconst Reactions: FC<OwnProps> = ({\n  message,\n  threadId,\n  isOutside,\n  maxWidth,\n  metaChildren,\n  observeIntersection,\n  noRecentReactors,\n  isCurrentUserPremium,\n  tags,\n}) => {\n  const {\n    toggleReaction,\n    addLocalPaidReaction,\n    updateMiddleSearch,\n    performMiddleSearch,\n    openPremiumModal,\n    resetLocalPaidReactions,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const { results, areTags, recentReactions } = message.reactions!;\n  const withServiceReactions = Boolean(message.areReactionsPossible && message.reactions);\n\n  const totalCount = useMemo(() => (\n    results.reduce((acc, reaction) => acc + reaction.count, 0)\n  ), [results]);\n\n  const recentReactorsByReactionKey = useMemo(() => {\n    const global = getGlobal();\n\n    return recentReactions?.reduce((acc, recentReaction) => {\n      const { reaction, peerId } = recentReaction;\n      const key = getReactionKey(reaction);\n      const peer = selectPeer(global, peerId);\n\n      if (!peer) return acc;\n\n      const peers = acc[key] || [];\n      peers.push(peer);\n      acc[key] = peers;\n      return acc;\n    }, {} as Record<ApiReactionKey, ApiPeer[]>);\n  }, [recentReactions]);\n\n  const props = useMemo(() => {\n    const messageKey = getMessageKey(message);\n    return results.map((reaction) => {\n      const reactionKey = getReactionKey(reaction.reaction);\n      const recentReactors = recentReactorsByReactionKey?.[reactionKey];\n      const shouldHideRecentReactors = totalCount > MAX_RECENT_AVATARS || noRecentReactors;\n      const tag = areTags ? tags?.[reactionKey] : undefined;\n\n      return {\n        reaction,\n        reactionKey,\n        messageKey,\n        recentReactors: !shouldHideRecentReactors ? recentReactors : undefined,\n        isChosen: isReactionChosen(reaction),\n        tag,\n      };\n    });\n  }, [message, noRecentReactors, recentReactorsByReactionKey, results, areTags, tags, totalCount]);\n\n  const handleClick = useLastCallback((reaction: ApiReaction) => {\n    if (areTags) {\n      if (!isCurrentUserPremium) {\n        openPremiumModal({\n          initialSection: 'saved_tags',\n        });\n        return;\n      }\n\n      updateMiddleSearch({ chatId: message.chatId, threadId, update: { savedTag: reaction } });\n      performMiddleSearch({ chatId: message.chatId, threadId });\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  const paidLocalCount = useMemo(() => results.find((r) => r.reaction.type === 'paid')?.localAmount || 0, [results]);\n\n  const handlePaidClick = useLastCallback((count: number) => {\n    addLocalPaidReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      count,\n    });\n  });\n\n  useEffect(() => {\n    if (!paidLocalCount) return;\n\n    showNotification({\n      localId: getMessageKey(message),\n      title: lang('StarsSentTitle'),\n      message: lang('StarsSentText', paidLocalCount),\n      actionText: lang('StarsSentUndo'),\n      cacheBreaker: paidLocalCount.toString(),\n      action: {\n        action: 'resetLocalPaidReactions',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      dismissAction: {\n        action: 'sendPaidReaction',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      duration: PAID_SEND_DELAY,\n      shouldShowTimer: true,\n      disableClickDismiss: true,\n      icon: 'star',\n    });\n  }, [lang, message, paidLocalCount]);\n\n  const handleRemoveReaction = useLastCallback((reaction: ApiReaction) => {\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  // Reset paid reactions on unmount\n  useEffectOnce(() => () => {\n    resetLocalPaidReactions({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        'Reactions',\n        isOutside && 'is-outside',\n        withServiceReactions && 'is-service',\n      )}\n      style={maxWidth ? `max-width: ${maxWidth}px` : undefined}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {props.map(({\n        reaction, recentReactors, messageKey, reactionKey, isChosen, tag,\n      }) => (\n        areTags ? (\n          <SavedTagButton\n            key={reactionKey}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            isChosen={isChosen}\n            reaction={reaction.reaction as ApiReaction}\n            tag={tag}\n            withContextMenu={isCurrentUserPremium}\n            onClick={handleClick}\n            onRemove={handleRemoveReaction}\n            observeIntersection={observeIntersection}\n          />\n        ) : (\n          <ReactionButton\n            key={reactionKey}\n            chatId={message.chatId}\n            messageId={message.id}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            recentReactors={recentReactors}\n            reaction={reaction}\n            onClick={handleClick}\n            onPaidClick={handlePaidClick}\n            observeIntersection={observeIntersection}\n          />\n        )\n      ))}\n      {metaChildren}\n    </div>\n  );\n};\n\nexport default memo(Reactions);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import type {\n  ApiInputInvoice,\n  ApiInputSavedStarGift,\n  ApiMessage,\n  ApiRequestInputInvoice,\n  ApiRequestInputSavedStarGift,\n  ApiStarsAmount,\n  ApiStarsTransaction,\n  ApiStarsTransactionPeer,\n  ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { LangFn } from '../../util/localization';\nimport type { GlobalState } from '../types';\n\nimport arePropsShallowEqual from '../../util/arePropsShallowEqual';\nimport { selectChat, selectPeer, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug') return inputInvoice;\n\n  if (inputInvoice.type === 'stargift') {\n    const {\n      peerId, shouldHideName, giftId, message, shouldUpgrade,\n    } = inputInvoice;\n    const peer = selectPeer(global, peerId);\n\n    if (!peer) return undefined;\n\n    return {\n      type: 'stargift',\n      peer,\n      shouldHideName,\n      giftId,\n      message,\n      shouldUpgrade,\n    };\n  }\n\n  if (inputInvoice.type === 'starsgift') {\n    const {\n      userId, stars, amount, currency,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'starsgift',\n        user,\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stars') {\n    const {\n      stars, amount, currency,\n    } = inputInvoice;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'stars',\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'chatInviteSubscription') {\n    const { hash } = inputInvoice;\n\n    return {\n      type: 'chatInviteSubscription',\n      hash,\n    };\n  }\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option, message,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n        message,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'starsgiveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription, stars, users,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'starsgiveaway',\n      purpose: {\n        type: 'starsgiveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n        stars,\n        users,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftUpgrade') {\n    const { inputSavedGift, shouldKeepOriginalDetails } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    if (!savedGift) return undefined;\n\n    return {\n      type: 'stargiftUpgrade',\n      inputSavedGift: savedGift,\n      shouldKeepOriginalDetails,\n    };\n  }\n\n  return undefined;\n}\n\nexport function getRequestInputSavedStarGift<T extends GlobalState>(\n  global: T, inputGift: ApiInputSavedStarGift,\n): ApiRequestInputSavedStarGift | undefined {\n  if (inputGift.type === 'user') return inputGift;\n\n  if (inputGift.type === 'chat') {\n    const chat = selectChat(global, inputGift.chatId);\n    if (!chat) return undefined;\n\n    return {\n      type: 'chat',\n      chat,\n      savedId: inputGift.savedId,\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      customPeerAvatarColor: '#000000',\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  if (peer.type === 'api') {\n    return {\n      avatarIcon: 'bots',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramBotApi.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramBotApi.Subtitle',\n      peerColorId: 4,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  const amount = starsAmount.amount + starsAmount.nanos / 1e9;\n  if (amount < 0) {\n    return `- ${lang.number(Math.abs(amount))}`;\n  }\n\n  return `+ ${lang.number(amount)}`;\n}\n\nexport function formatStarsAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  return lang.number(starsAmount.amount + starsAmount.nanos / 1e9);\n}\n\nexport function getStarsTransactionFromGift(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'giftStars') return undefined;\n\n  const { transactionId, stars } = action;\n\n  return {\n    id: transactionId!,\n    stars: {\n      amount: stars!,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: message.isOutgoing ? message.chatId : (message.senderId || message.chatId),\n    },\n    date: message.date,\n    isGift: true,\n    isMyGift: message.isOutgoing || undefined,\n  };\n}\n\nexport function getPrizeStarsTransactionFromGiveaway(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'prizeStars') return undefined;\n\n  const { transactionId, stars, targetChatId } = action;\n\n  return {\n    id: transactionId!,\n    stars: {\n      amount: stars!,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: targetChatId!,\n    },\n    date: message.date,\n    giveawayPostId: message.id,\n  };\n}\n\nexport function areInputSavedGiftsEqual(one: ApiInputSavedStarGift, two: ApiInputSavedStarGift) {\n  return arePropsShallowEqual(one, two);\n}\n","import type { ApiChat, ApiPeer, ApiUser } from '../../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../config';\n\nexport function isApiPeerChat(peer: ApiPeer): peer is ApiChat {\n  return 'title' in peer;\n}\n\nexport function isApiPeerUser(peer: ApiPeer): peer is ApiUser {\n  return !isApiPeerChat(peer);\n}\n\nexport function getPeerTypeKey(peer: ApiPeer) {\n  if (isApiPeerChat(peer)) {\n    if (peer.type === 'chatTypeBasicGroup' || peer.type === 'chatTypeSuperGroup') {\n      return 'ChatList.PeerTypeGroup';\n    }\n\n    if (peer.type === 'chatTypeChannel') {\n      return 'ChatList.PeerTypeChannel';\n    }\n\n    if (peer.type === 'chatTypePrivate') {\n      return 'ChatList.PeerTypeNonContact';\n    }\n\n    return undefined;\n  }\n\n  if (peer.id === SERVICE_NOTIFICATIONS_USER_ID) {\n    return 'ServiceNotifications';\n  }\n\n  if (peer.isSupport) {\n    return 'SupportStatus';\n  }\n\n  if (peer.type && peer.type === 'userTypeBot') {\n    return 'ChatList.PeerTypeBot';\n  }\n\n  if (peer.isContact) {\n    return 'ChatList.PeerTypeContact';\n  }\n\n  return 'ChatList.PeerTypeNonContactUser';\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T extends any>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","import { beginHeavyAnimation, useRef } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { isAnimatingScroll } from '../util/animateScroll';\nimport useLastCallback from './useLastCallback';\nimport useResizeObserver from './useResizeObserver';\nimport useThrottledCallback from './useThrottledCallback';\n\nconst BOTTOM_FOCUS_SCROLL_THRESHOLD = 5;\nconst THROTTLE_MS = 300;\nconst RESIZE_ANIMATION_DURATION = 400;\n\nfunction useMessageResizeObserver(\n  ref: React.RefObject<HTMLElement> | undefined,\n  shouldFocusOnResize = false,\n) {\n  const {\n    focusLastMessage,\n  } = getActions();\n  const messageHeightRef = useRef(0);\n\n  const handleResize = useLastCallback(\n    (entry) => {\n      const lastHeight = messageHeightRef.current;\n\n      const newHeight = entry.contentRect.height;\n      messageHeightRef.current = newHeight;\n\n      if (isAnimatingScroll() || !lastHeight || newHeight <= lastHeight) return;\n\n      const container = entry.target.closest('.MessageList');\n      if (!container) return;\n\n      beginHeavyAnimation(RESIZE_ANIMATION_DURATION);\n\n      const resizeDiff = newHeight - lastHeight;\n      const { offsetHeight, scrollHeight, scrollTop } = container;\n      const currentScrollBottom = Math.round(scrollHeight - scrollTop - offsetHeight);\n      const previousScrollBottom = currentScrollBottom - resizeDiff;\n\n      if (previousScrollBottom <= BOTTOM_FOCUS_SCROLL_THRESHOLD) {\n        focusLastMessage();\n      }\n    },\n  );\n\n  const throttledResize = useThrottledCallback(handleResize, [handleResize], THROTTLE_MS, false);\n\n  useResizeObserver(ref, throttledResize, !shouldFocusOnResize);\n}\n\nexport default useMessageResizeObserver;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport getOffsetToContainer from './visibility/getOffsetToContainer';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\nconst LUMA_THRESHOLD = 128;\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n\n/* eslint-disable no-bitwise */\nexport const convertToRGBA = (color: number): string => {\n  const alpha = (color >> 24) & 0xff;\n  const red = (color >> 16) & 0xff;\n  const green = (color >> 8) & 0xff;\n  const blue = color & 0xff;\n\n  const alphaFloat = alpha / 255;\n  return `rgba(${red}, ${green}, ${blue}, ${alphaFloat})`;\n};\n\nexport const numberToHexColor = (color: number): string => {\n  return `#${color.toString(16).padStart(6, '0')}`;\n};\n\nexport const getTextColor = (color: number): string => {\n  const r = (color >> 16) & 0xff;\n  const g = (color >> 8) & 0xff;\n  const b = color & 0xff;\n  const luma = getColorLuma([r, g, b]);\n  return luma > LUMA_THRESHOLD ? 'black' : 'white';\n};\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","export interface OpeningTag {\n  type: 'openingTag';\n  language?: string;\n}\n\nexport interface Text {\n  type: 'text';\n  text: string;\n}\n\nexport interface ClosingTag {\n  type: 'closingTag';\n}\n\nexport type Entry = OpeningTag | Text | ClosingTag;\n\nexport function entriesToHtml(entries: Entry[], tag: string, attributes?: string) {\n  attributes = attributes ? ` ${attributes}` : '';\n  let html = '';\n  for (const entry of entries) {\n    switch (entry.type) {\n      case 'openingTag':\n        html += `<${tag}${attributes}>`;\n        break;\n      case 'text':\n        html += entry.text;\n        break;\n      case 'closingTag':\n        html += `</${tag}>`;\n        break;\n    }\n  }\n  return html;\n}\n","import { entriesToHtml, type Entry } from './common';\n\nconst CODE = '`';\n\nexport function parseCode(text: string) {\n  const entries = new Array<Entry>();\n  const lines = text.split('\\n');\n\n  for (let i = 0; i < lines.length; ++i) {\n    let line = lines[i];\n    const canPushNewLine = i !== lines.length - 1;\n    while (line.includes(CODE)) {\n      const firstIndex = line.indexOf(CODE);\n      const nextIndex = line.indexOf(CODE, firstIndex + 1);\n      if (nextIndex === -1) {\n        break;\n      }\n      if (firstIndex !== 0) {\n        entries.push({ type: 'text', text: line.slice(0, firstIndex) });\n        line = line.slice(firstIndex);\n        continue;\n      }\n      entries.push({ type: 'openingTag' });\n      entries.push({ type: 'text', text: line.slice(1, nextIndex) });\n      entries.push({ type: 'closingTag' });\n      line = line.slice(nextIndex + 1);\n    }\n    if (line) {\n      entries.push({ type: 'text', text: line });\n    }\n    if (canPushNewLine) {\n      entries.push({ type: 'text', text: '\\n' });\n    }\n  }\n\n  return entriesToHtml(entries, 'code');\n}\n","import { ApiMessageEntityTypes } from '../../api/types';\n\nimport {\n  entriesToHtml, type Entry, type Text,\n} from './common';\n\nexport function parseCommonEntities(text: string) {\n  text = parseCommonEntity(text, '**', 'b');\n  text = parseCommonEntity(text, '__', 'i');\n  text = parseCommonEntity(text, '~~', 's');\n  text = parseCommonEntity(text, '||', 'span', `data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\"`);\n  return text;\n}\n\nfunction parseCommonEntity(text: string, entitySyntax: string, tagName: string, attributes?: string) {\n  const entries = new Array<Entry>();\n  const lines = text.split('\\n');\n  let opening = true;\n\n  for (let i = 0; i < lines.length; ++i) {\n    let line = lines[i];\n    const canPushNewLine = i !== lines.length - 1;\n    if (opening) {\n      while (line.includes(entitySyntax)) {\n        const firstIndex = line.indexOf(entitySyntax);\n        const nextIndex = line.indexOf(entitySyntax, firstIndex + entitySyntax.length);\n        if (nextIndex === -1) {\n          break;\n        }\n        if (firstIndex !== 0) {\n          entries.push({ type: 'text', text: line.slice(0, firstIndex) });\n          line = line.slice(firstIndex);\n          continue;\n        }\n        entries.push({ type: 'openingTag' });\n        entries.push({ type: 'text', text: line.slice(entitySyntax.length, nextIndex) });\n        entries.push({ type: 'closingTag' });\n        line = line.slice(nextIndex + entitySyntax.length);\n      }\n\n      if (!line && canPushNewLine) {\n        entries.push({ type: 'text', text: '\\n' });\n        continue;\n      }\n    }\n    if (!line) {\n      continue;\n    }\n\n    const syntaxIndex = line.indexOf(entitySyntax);\n    if (syntaxIndex === -1) {\n      entries.push({ type: 'text', text: line });\n      if (canPushNewLine) {\n        entries.push({ type: 'text', text: '\\n' });\n      }\n      continue;\n    }\n    if (syntaxIndex !== 0) {\n      entries.push({ type: 'text', text: line.slice(0, syntaxIndex) });\n    }\n    line = line.slice(syntaxIndex);\n    if (opening) {\n      entries.push({ type: 'openingTag' });\n      opening = false;\n    } else {\n      entries.push({ type: 'closingTag' });\n      opening = true;\n    }\n    if (canPushNewLine) {\n      entries.push({ type: 'text', text: '\\n' });\n    }\n  }\n\n  const openingTags = new Array<Entry>();\n  for (const entry of entries) {\n    if (entry.type === 'openingTag') {\n      openingTags.push(entry);\n    } else if (entry.type === 'closingTag') {\n      openingTags.pop();\n    }\n  }\n  for (const openingTag of openingTags) {\n    openingTag.type = 'text';\n    (openingTag as Text).text = entitySyntax;\n  }\n\n  return entriesToHtml(entries, tagName, attributes);\n}\n","import type { Entry, OpeningTag, Text } from './common';\n\nconst PRE = '```';\n\nexport function parsePre(text: string) {\n  const entries = new Array<Entry>();\n  const lines = text.split('\\n');\n  let opening = true;\n\n  for (let i = 0; i < lines.length; ++i) {\n    let line = lines[i];\n    const canPushNewLine = i !== lines.length - 1;\n    const preIndex = line.indexOf(PRE);\n    if (preIndex === -1) {\n      entries.push({ type: 'text', text: line });\n      if (canPushNewLine) {\n        entries.push({ type: 'text', text: '\\n' });\n      }\n      continue;\n    }\n    if (preIndex !== 0) {\n      entries.push({ type: 'text', text: line.slice(0, preIndex) });\n    }\n    line = line.slice(preIndex);\n    if (opening) {\n      const language = line.slice(PRE.length);\n      if (language && language.endsWith(PRE)) {\n        entries.push({ type: 'openingTag' });\n        entries.push({ type: 'text', text: language.slice(0, language.length - PRE.length) });\n        entries.push({ type: 'closingTag' });\n        if (canPushNewLine) {\n          entries.push({ type: 'text', text: '\\n' });\n        }\n        continue;\n      }\n      entries.push({ type: 'openingTag', language });\n      opening = false;\n    } else {\n      entries.push({ type: 'closingTag' });\n      opening = true;\n    }\n    if (canPushNewLine) {\n      entries.push({ type: 'text', text: '\\n' });\n    }\n  }\n\n  const openingTags = new Array<Entry>();\n  for (const entry of entries) {\n    if (entry.type === 'openingTag') {\n      openingTags.push(entry);\n    } else if (entry.type === 'closingTag') {\n      openingTags.pop();\n    }\n  }\n  for (const openingTag of openingTags) {\n    openingTag.type = 'text';\n    (openingTag as Text).text = PRE + ((openingTag as OpeningTag).language ?? '');\n    delete (openingTag as OpeningTag).language;\n  }\n\n  let html = '';\n  for (const entry of entries) {\n    switch (entry.type) {\n      case 'openingTag': {\n        let language = entry.language;\n        if (language) {\n          language = language.replaceAll('\"', '\\\\\"');\n          language = ` data-language=\"${entry.language}\"`;\n        }\n        html += `<pre${language}>`;\n        break;\n      }\n      case 'text':\n        html += entry.text;\n        break;\n      case 'closingTag':\n        html += '</pre>';\n        break;\n    }\n  }\n\n  return html;\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { parseCode } from './markdown/parseCode';\nimport { parseCommonEntities } from './markdown/parseCommonEntities';\nimport { parsePre } from './markdown/parsePre';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsePre(parsedHtml);\n\n  const body = new DOMParser().parseFromString(parsedHtml, 'text/html').body;\n  {\n    const childNodes = body.childNodes;\n\n    for (const node of childNodes) {\n      if (node instanceof Text) {\n        node.replaceWith(document.createRange().createContextualFragment(parseCode(node.data)));\n      }\n    }\n  }\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // merge text nodes\n  const childNodes = body.childNodes;\n  for (let i = 0; i < childNodes.length; ++i) {\n    const node = childNodes[i];\n    const nextNode = childNodes[i + 1];\n    if (node instanceof Text) {\n      if (nextNode && nextNode instanceof Text) {\n        node.data += nextNode.data;\n        nextNode.data = '';\n        ++i;\n      }\n      node.replaceWith(document.createRange().createContextualFragment(parseCommonEntities(node.data)));\n    }\n  }\n\n  return body.innerHTML;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Blockquote) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        canCollapse: (node as HTMLQuoteElement).dataset.collapsed === '1',\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","export default function getOffsetToContainer(element: HTMLElement, container: HTMLElement) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n\n  let current: HTMLElement | null = element;\n\n  while (current && current !== container && !current.contains(container)) {\n    offsetTop += current.offsetTop;\n    offsetLeft += current.offsetLeft;\n\n    current = current.offsetParent as HTMLElement;\n  }\n\n  return { top: offsetTop, left: offsetLeft };\n}\n","export default function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};"],"names":["scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","memo","AnimatedCounter","text","className","isDisabled","ref","isRtl","useLang","prevText","usePreviousDeprecated","forceUpdate","useForceUpdate","shouldAnimate","selectCanAnimateInterface","getGlobal","undefined","characters","useMemo","elements","textLength","length","prevTextLength","i","charIndex","prevTextCharIndex","unshift","React","createElement","renderAnimatedCharacters","useEffect","timeoutId","window","setTimeout","clearTimeout","buildClassName","dir","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","getStickerMediaHash","previewBlobUrl","useMedia","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","useFlag","Boolean","thumbClassNames","useMediaTransitionDeprecated","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","AvatarList","peers","limit","badgeText","lang","useOldLang","pxSize","AVATAR_SIZES","renderingBadgeText","slice","map","peer","Avatar","MediaSpoiler","isVisible","withAnimation","width","height","useRef","shouldRender","transitionClassNames","useShowTransitionDeprecated","canvasRef","useCanvasBlur","handleClick","e","current","el","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","shiftX","shiftY","requestMutation","setAttribute","onClick","PasswordForm","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","isMobile","useAppLayout","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","select","action","event","preventDefault","stopEvent","autoComplete","type","id","tabIndex","value","onChange","target","MIN_PASSWORD_LENGTH","maxLength","role","title","Icon","name","Button","ripple","disabled","withGlobal","global","peerId","forceShowSelf","selectPeer","user","selectUser","isSavedMessages","isSelf","PeerChip","icon","isMinimized","canClose","isCloseNonDestructive","clickArg","mockPeer","customPeer","withPeerColors","withEmojiStatus","itemClassName","apiPeer","anyPeer","chat","isApiPeerChat","iconElement","titleElement","titleText","getPeerTitle","FullNameTitle","fullClassName","isForum","isAvatarSquare","getPeerColorClass","PremiumProgress","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","floatingBadgeRef","parentContainerRef","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","Math","max","min","newTailPosition","useResizeObserver","hasFloatingBadge","isProgressFull","viewBox","fill","d","contentForStatusMenuContext","arg","StickerButton","noPlay","noContextMenu","isStatusPicker","canViewSet","observeIntersection","observeIntersectionForShowing","isSelected","isCurrentUserPremium","shouldIgnorePremium","noShowPremium","sharedCanvasRef","withTranslucentThumb","forcePlayback","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","isEffectEmoji","openStickerSet","openPremiumModal","setEmojiStatus","getActions","menuRef","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","stickerSetInfo","isPremium","isFree","hasEffect","isCustomEmoji","isLocked","isIntersecting","useIsIntersecting","shouldLoad","shouldPlay","isIntesectingForShowing","isContextMenuOpen","contextMenuAnchor","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","shouldRenderContextMenu","getTriggerElement","getRootElement","closest","getMenuElement","querySelector","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","stopPropagation","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","duration","emojiStatusId","expires","getServerTime","shouldShowCloseButton","contextMenuItems","items","forEach","item","push","MenuItem","emoji","onMouseDown","preventMessageInputBlurWithBubbling","initialSection","onContextMenu","StickerView","containerRef","isSmall","shouldLoop","shouldPreloadPreview","noVideoOnMobile","withSharedAnimation","forceAlways","color","round","noFastClick","Menu","isOpen","anchor","autoClose","onClose","onCloseAnimationEnd","COLORS","red","blue","COLOR_KEYS","Object","keys","theme","selectTheme","GiftRibbon","validSvgRandomId","useUniqueId","colorKey","gradientColor","startColor","endColor","root","ribbon","x1","y1","x2","y2","gradientUnits","offset","getStickerFromGift","gift","attributes","find","attr","getTotalGiftAvailability","availabilityTotal","totalCount","getGiftAttributes","model","backdrop","pattern","originalDetails","getGiftAttributesFromList","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","currentUserId","orderBy","Infinity","selectChat","priority","lastMessage","selectChatLastMessage","date","isVerified","includes","Date","now","indexOf","useEditorState","defaultHtml","getHtml","originalSetHtml","useSignal","overwrite","setOverwrite","htmlOverwrite","setHtmlOverwrite","setHtml","useCallback","html","v","useShowCustomEmojiPremiumNotification","showNotification","customEmojiNotificationNumber","useGlobal","notificationNumber","message","payload","shouldReplaceHistory","actionText","Number","ITEM_CLASS_NAME","PeerPicker","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withDefaultPadding","onFilterChange","onDisabledClick","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","shouldMinimize","requestMeasure","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","filter","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","concat","handleItemClick","categoryType","newSelectedCategories","splice","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","isCategory","category","peerOrCategory","DEBUG","key","isAlwaysUnselected","isAlwaysSelected","isChecked","subtitle","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","PickerItem","avatarElement","inactive","inputElement","Radio","checked","onlyInput","Checkbox","inputPosition","beforeChildren","pickerCategoryTitle","container","header","peerChip","InputText","InfiniteScroll","pickerList","padded","itemSelector","Loading","noResults","titleClassName","isClickable","RippleEffect","IS_IOS","RadialPatternBackground","backgroundColors","patternColor","patternIcon","clearBottomSector","getContainerSize","setContainerSize","dpr","useDevicePixelRatio","emojiImage","setEmojiImage","previewMediaHash","preloadImage","then","patternPositions","coordinates","ring","ringItemCount","floor","ringProgress","ringRadius","angleShift","PI","angle","cos","sin","sizeFactor","random","entry","contentRect","clientWidth","clientHeight","draw","canvas","ctx","getContext","save","centerShift","renderX","renderY","drawImage","restore","fillStyle","globalCompositeOperation","fillRect","radialGradient","createRadialGradient","addColorStop","maxSide","CustomEmojiEffect","reaction","isLottie","particleSize","onEnded","stickerHash","getStickerHashById","documentId","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","Array","from","generateRandomDropPath","path","CustomEmoji","onAnimationEnd","alt","ICON_SIZE","REM","EFFECT_SIZE","MIN_PARTICLE_SIZE","containerId","genericEmojiEffects","reactions","activeReactions","selectTabState","withEffects","selectPerformanceSettingsValue","availableReactions","genericEffects","ReactionAnimatedEmoji","effectSize","withEffectOnly","shouldPause","loopLimit","stopActiveReaction","isCustom","availableReaction","r","isSameReaction","centerIconId","centerIcon","customEmoji","useCustomEmoji","assignedEffectId","aroundAnimation","assignedId","available","emoticon","effectId","stickers","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","observeIntersectionForPlaying","AnimatedSticker","animatedIcon","roundToNearestEven","play","noLoop","Fragment","effect","withIconHeart","staticIconId","staticIcon","mediaHash","mediaData","shouldApplySizeFix","shouldReplaceWithHeartIcon","blankUrl","loadShader","gl","shaderSource","shaderType","shader","createShader","compileShader","getShaderParameter","COMPILE_STATUS","getAnimate","colors","vec3Colors","hex","startsWith","parseInt","Error","program","createProgram","shaders","shaderSources","vertexShader","fragmentShader","VERTEX_SHADER","FRAGMENT_SHADER","loadShaders","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","positionAttributeLocation","getAttribLocation","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","viewport","enableVertexAttribArray","vertexAttribPointer","FLOAT","resolutionLoc","getUniformLocation","color1Loc","color2Loc","color3Loc","color4Loc","color1PosLoc","color2PosLoc","color3PosLoc","color4PosLoc","keyPoints","targetColor1Pos","targetColor2Pos","targetColor3Pos","targetColor4Pos","keyShift","updateTargetColors","color1Pos","color2Pos","color3Pos","color4Pos","renderGradientCanvas","uniform2fv","uniform3fv","drawArrays","TRIANGLES","speed","animate","distance","requestAnimationFrame","fastRaf","p1","p2","sqrt","instances","Map","maskImage","cover","noAnimate","currentInstance","get","set","delete","toNextPositionGlobal","instance","values","ActionMessageSuggestedAvatar","renderContent","openMediaViewer","uploadProfilePhoto","isOutgoing","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","photo","content","suggestedPhotoUrl","getPhotoMediaHash","suggestedVideoUrl","getVideoProfilePhotoMediaHash","isVideo","showAvatarNotification","screen","SettingsScreens","Main","handleSetSuggestedAvatar","file","handleCloseCropModal","handleSetVideo","async","blob","fetchBlob","File","videoTs","videoSizes","l","videoStartTs","chatId","messageId","threadId","MAIN_THREAD_ID","origin","MediaViewerOrigin","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","ConfirmDialog","confirmHandler","textParts","ActionMessageUpdatedAvatar","handleViewUpdatedAvatar","SimilarChannel","channel","openChat","fallbackColor","setColor","imgBlobUrl","getChatAvatarHash","averageColor","getAverageColor","rgb2hex","useAverageColor","formatIntegerCompact","membersCount","MoreChannels","channelsCount","openChatWithInfo","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","count","selectSimilarChannelIds","selectIsCurrentUserPremium","SimilarChannels","toggleChannelRecommendations","loadChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","handleToggle","Skeleton","xmlns","SHOW_CHANNELS_NUMBER","senderId","targetUserIds","targetChatId","targetMessageId","getMessageReplyInfo","replyToMsgId","targetMessage","selectChatMessage","settings","themes","isFocused","selectIsMessageFocused","direction","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","senderChat","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","starCount","stars","starsGiftSticker","selectGiftStickerForStars","topic","selectTopicFromMessage","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","ActionMessage","isEmbedded","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","observeIntersectionForLoading","onIntersectPinnedMessage","requestConfetti","checkGiftCode","getReceipt","openGiftInfoModalFromMessage","openPrizeStarsTransactionFromGiveaway","oldLang","useOnIntersect","useEnsureMessage","replyInfo","useFocusMessage","elementRef","useUnmountCleanup","isPinned","viewportPinnedIdsToRemove","noAppearanceAnimation","isShown","markShown","isPremiumGift","isGiftCode","isSuggestedAvatar","isUpdatedAvatar","isJoinedMessage","isJoinedChannelMessage","isStarsGift","isStarGift","isStarGiftUnique","isPrizeStars","withServiceReactions","areReactionsPossible","useMessageResizeObserver","shouldShowConfettiRef","isUnread","withStars","usersById","users","byId","targetUsers","userId","renderActionMessageText","isContextMenuShown","handleStarGiftClick","starGift","handlePremiumGiftClick","isGift","fromUserId","toUserId","monthsAmount","handlePrizeStarsClick","handleGiftCodeClick","slug","renderStarGiftUserCaption","fromId","fromPeer","targetPeer","getMessageHtmlId","preventMessageInputBlur","giftMessage","AnimatedIconFromSticker","nonInteractive","renderTextWithEntities","entities","Sparkles","preset","renderGift","isFromGiveaway","isGiveaway","isUnclaimed","renderText","getChatTitle","renderGiftCode","formatInteger","targetChatTitle","starGiftMessage","amountToConvert","starsToConvert","isSaved","savedId","isUpgraded","withNodes","pluralValue","canUpgrade","isConverted","amount","withMarkdown","renderStarGiftUserDescription","alreadyPaidUpgradeStars","renderStarGift","centerColor","edgeColor","adaptedPatternColor","textColor","number","renderStarGiftUnique","renderPrizeStars","ContextMenuContainer","messageListType","Reactions","isOutside","customEmojis","forEmoji","selectIsChatWithSelf","CustomEmojiTooltip","addRecentCustomEmoji","onCustomEmojiSelect","clearCustomEmojiForEmoji","prevStickers","displayedStickers","observe","useIntersectionObserver","rootRef","throttleMs","captureEscKeyListener","handleCustomEmojiSelect","ce","hidden","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","EmojiButton","native","IS_PACKAGED_ELECTRON","BASE_URL","image","isLoaded","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","CustomEmojiButton","EmojiTooltip","emojis","onEmojiSelect","addRecentEmoji","listEmojis","usePrevDuringAnimation","handleSelectEmoji","handleSelect","handleCustomEmojiClick","selectedIndex","useKeyboardNavigation","isActive","isHorizontal","shouldRemoveSelectionOnReset","onSelect","useEffectWithPrevDeps","prevSelectedIndex","index","visibleIndexes","allElements","findInViewport","first","isFullyVisible","newLeft","animateHorizontalScroll","setItemVisible","AbsoluteVideo","constructor","videoUrl","options","_defineProperty","this","video","document","disablePictureInPicture","muted","position","load","loop","appendChild","recalculatePositionAndSize","isPlaying","paused","safePlay","pause","destroy","remove","updatePosition","SIZE","TextFormatter","useModuleLoader","Bundles","Extra","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","language","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","canPlayAnimatedEmojisGlobal","recentEmojis","customEmojiForEmoji","keywords","RichTextInput","captionLimit","limitIndicator","inputId","placeholderComponent","shouldSuppressTextFormatter","onUpdate","onScroll","onFocus","onBlur","isNeedPremium","disableTextFormatter","isEditable","maxInputHeight","POSITIVE_INFINITY","forcedPlaceholder","shouldSuppressFocus","onSuppressedFocus","onKeyDown","isReady","customEmojiPrefix","className_","singleLine","label","handlePaste","disabledEntities","canUseEmojiTooltip","canRenderEmojiTooltip","cannotInsertHtml","children","selectionTimeoutRef","cloneRef","wrapperRef","scrollerCloneRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","replace","clone","scrollHeight","newHeight","isOverflown","exec","transitionDuration","log","abs","classList","toggle","useLayoutEffect","htmlRef","innerHTML","updateCloneRef","focusInput","getIsHeavyAnimating","focusEditableElement","handleCloseTextFormatter","selection","getSelection","removeAllRanges","empty","clearSelection","checkSelection","rangeCount","IS_ANDROID","selectionRange","getRangeAt","selectedText","toString","trim","isSelectionInsideInput","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","captureFirstTab","debounce","getIsDirectTextInputDisabled","captureKeyboardListeners","onTab","isTouched","useDerivedState","input","suppressFocus","blur","addEventListener","removeEventListener","inputScrollerContentClass","prefixId","colorFilter","useColorFilter","playersById","clearPlayers","ids","player","synchronizeElements","playerIdsToClear","querySelectorAll","element","dataset","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","join","viewId","hexToRgb","lottie","ensureRLottie","init","coords","isLowPriority","g","b","removeView","setSharedCanvasCoords","absoluteVideo","createPlayer","animation","addCustomEmojiInputRenderCallback","activePlayersById","documentElement","setProperty","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useBackgroundMode","useInputCustomEmojis","setIsFocused","handleFocus","handleBlur","activeElement","insertHtmlAndUpdateCursor","newHtml","inInputId","body","DOMParser","parseFromString","disabledEntity","selector","entityTypeToSelctorMap","found","match","replaceWith","childNodes","removeDisabledEntities","messageInput","getElementById","execCommand","dispatchEvent","Event","bubbles","requestNextMutation","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","showCustomEmojiPremiumNotification","useClipboardPaste","getSelectionRange","useGetSelectionRange","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","contentEditable","textContent","result","handleCloseContextMenu","e2","KeyboardEvent","button","once","onTouchCancel","htmlFor","anchorPosition","ApiMessageEntityTypes","Bold","Code","Italic","Pre","Url","Underline","Spoiler","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","buildAttachment","filename","blobUrl","URL","createObjectURL","mimeType","quick","audio","shouldSendAsFile","SUPPORTED_PHOTO_CONTENT_TYPES","img","validateAspectRatio","shouldShrink","isGif","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","SUPPORTED_VIDEO_CONTENT_TYPES","videoWidth","videoHeight","preloadVideo","err","createPosterForVideo","SUPPORTED_AUDIO_CONTENT_TYPES","performer","coverUrl","url","fetchFromUrl","selectCover","metadata","common","artist","picture","format","coverBlob","Blob","data","parseAudioMetadata","prepareAttachmentsToSend","attachments","shouldSendCompressed","attach","voice","shouldSendAsSpoiler","getFilesFromDataTransferItems","dataTransferItems","files","traverseFileTreePromise","Promise","resolve","isFile","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","all","kind","webkitGetAsEntry","validateFiles","getSelectedBlockquote","focusNode","anchorNode","HTMLElement","EDITABLE_INPUT_ID","HTMLQuoteElement","parentElement","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","wrapNodeAnchor","node","href","cloneNode","wrapNodeInline","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","styledNode","nodeName","getCleanNode","newWrapper","createDocumentFragment","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","VALID_TARGET_IDS","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","GIFT_MESSAGE_INPUT_ID","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","clipboardData","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","filteredNodes","cleanNodes","getCleanDocument","console","textContents","getElementsByTagName","removeAttribute","tagName","entityType","getAttribute","ignoreOnPaste","ENTITY_CLASS_BY_NODE_NAME","innerText","MentionName","blockquote","nested","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","textToPaste","isWordDocument","hasText","shouldSetAttachments","newAttachments","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","THROTTLE","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","source","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","isEnabled","loadCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","extractLastEmojiThrottled","useThrottledResolver","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","useDerivedSignal","hasCustomEmojis","lastEmoji","inputEl","regexText","regex","modify","buildCustomEmojiHtml","repeat","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","memoized","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","mapValues","natives","emojisByKeyword","byKeyword","byName","reduce","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","sort","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","default","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","EDITABLE_INPUT_CSS_SELECTOR","emojiCode","newShouldAutoInsert","endsWith","substring","test","toLowerCase","shouldSaveSelectionOnUpdateItems","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","newIndex","cycleRestrict","handleArrowKey","handleItemSelect","altKey","ctrlKey","metaKey","shiftKey","isSelectionOutOfRange","onEsc","onUp","onDown","onLeft","onRight","onEnter","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","isResizingContainer","isQuote","scrollTargetPosition","isRelocatedRef","isRelocated","messagesContainer","isToBottom","scrollPosition","maxDistance","animateScroll","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","addExtraClass","MAX_EFFECT_COUNT","QUALITY","PaidReactionEmoji","localAmount","effectRef","effectsIds","setEffectsIds","canAddMoreEffects","prevLocalAmount","prev","useShowTransition","noMountTransition","withShouldRender","newEffectsIds","teactFastList","StarIcon","LOCAL_TGS_URLS","StarReactionEffect","quality","REACTION_SIZE","selectStarsState","ReactionButton","isOwnMessage","recentReactors","chosenClassName","onPaidClick","openStarsBalanceModal","resetLocalPaidReactions","openPaidReactionModal","requestWave","counterRef","animationRef","isPaid","starsState","useSelector","areStarsLoaded","handlePaidClick","prevReaction","balance","originReaction","startX","startY","offsetHeight","currentScale","getComputedStyle","scale","cancel","easing","prevAmount","usePrevious","shouldRenderPaidCounter","own","paid","isReactionChosen","chosen","animatedEmoji","paidCounter","counter","maxWidth","metaChildren","noRecentReactors","tags","toggleReaction","addLocalPaidReaction","updateMiddleSearch","performMiddleSearch","results","areTags","recentReactions","acc","recentReactorsByReactionKey","recentReaction","getReactionKey","messageKey","getMessageKey","reactionKey","shouldHideRecentReactors","tag","isChosen","update","savedTag","paidLocalCount","localId","cacheBreaker","dismissAction","shouldShowTimer","disableClickDismiss","handleRemoveReaction","useEffectOnce","SavedTagButton","withContextMenu","onRemove","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","Modal","isSlim","teactExperimentControlled","isText","withCount","editSavedReactionTag","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRenameTag","newTitle","tagText","tail","tailFill","destructive","getRequestInputInvoice","inputInvoice","shouldHideName","giftId","shouldUpgrade","currency","purpose","hash","userIds","boostChannelId","option","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","inputSavedGift","shouldKeepOriginalDetails","savedGift","getRequestInputSavedStarGift","inputGift","buildStarsTransactionCustomPeer","avatarIcon","isCustomPeer","titleKey","subtitleKey","peerColorId","customPeerAvatarColor","withPremiumGradient","formatStarsTransactionAmount","starsAmount","nanos","formatStarsAmount","getStarsTransactionFromGift","transactionId","isMyGift","getPrizeStarsTransactionFromGiveaway","giveawayPostId","areInputSavedGiftsEqual","one","two","arePropsShallowEqual","isApiPeerUser","SERVICE_NOTIFICATIONS_USER_ID","isSupport","isContact","callback","delay","savedCallback","resolver","deps","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","ms","throttledResolver","useDebouncedResolver","noLast","useDebouncedCallback","useDebouncedSignal","debouncedResolver","RADIUS","ITERATIONS","withRaf","radius","preferredWidth","preferredHeight","isStarted","useSyncEffect","Image","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","fastBlur","onload","replyOriginForId","loadMessage","inputSelector","getRange","setRange","onSelectionChange","range","Element","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","passive","timeoutRef","isCurrentPresent","isPrevPresent","prevRef","lastRef","shouldFocusOnResize","focusLastMessage","messageHeightRef","handleResize","lastHeight","isAnimatingScroll","beginHeavyAnimation","resizeDiff","scrollTop","throttledResize","DEFAULT_DURATION","stopById","containerWidth","scrollWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","t","currentPath","transition","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","elementHeight","currentScrollTop","containerHeight","elementTop","getOffsetToContainer","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","animateSingle","newScrollTop","cancelScrollBlockingAnimation","hex2rgb","param","p0","rgb2hsb","h","s","hsb2rgb","f","p","q","defaultRGB","rgb","context","naturalHeight","naturalWidth","getImageData","blockSize","getColorLuma","rgbColor","getPatternColor","hue","saturation","convertToRGBA","getTextColor","selectorOrElements","isDense","shouldContainBottom","viewportY1","viewportY2","isFound","force","forcePlaceCaretAtEnd","createRange","lastChild","nodeValue","selectNodeContents","collapse","addRange","LUMA_THRESHOLD","ratio","outputType","finally","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","fillColor","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","CUSTOM_PEER_PREMIUM","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN","entriesToHtml","CODE","parseCode","lines","split","line","canPushNewLine","firstIndex","nextIndex","parseCommonEntity","entitySyntax","opening","syntaxIndex","openingTags","pop","openingTag","PRE","B","STRONG","I","EM","INS","U","S","Strike","STRIKE","DEL","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","preIndex","replaceAll","parsePre","Text","createContextualFragment","nextNode","parseMarkdown","RE_LINK_TEMPLATE","_","link","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","entity","rawText","Email","Phone","TextUrl","getEntityTypeFromNode","rawIndex","canCollapse","getEntityDataFromNode","hasChildNodes","extractorEl","useCommonAncestor","sel","cloneRange","intersectsNode","contains","setStart","cloneContents","getCaretPosition","caretPosition","caretRange","setEnd","endContainer","endOffset","setCaretPosition","TEXT_NODE","removeAllSelections","offsetTop","offsetLeft","offsetParent"],"sourceRoot":""}