{"version":3,"file":"7644.823cba0f5ffd18e2dc22.js","mappings":"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qBAAsBhQ,GAAkByI,IAAmBD,IAAkBuD,EAC7EpU,uBAAwB1Z,EAAOorB,SAASC,MAAM3R,uBAC9C4T,oBACA0E,YAAahyB,EAAOiyB,QAAQD,YAC5BvE,eACAyE,mBAAoBlyB,EAAOmyB,aAAaC,aACxCD,aAAcnyB,EAAOmyB,aAAajwB,KAClC6rB,sBACA1G,YACAI,gBAAgBlnB,EAAAA,EAAAA,KAAeP,GAAQynB,eACvC4K,wBAAyB3H,GAAc2H,wBACvC9D,UACAE,mBACAT,sBACAE,gBACAE,oBACAO,oBACD,GAvJe5uB,EA5tDwBuyB,EAC1C7c,OACAuZ,gBACAuD,gBACAzE,oBACAoB,yBACAsD,UACArrB,YACAsrB,cACAC,WACAC,UACA3Y,kBACA/Z,UACA8Y,YACAoR,WACAyC,sBACA3M,mBACAkB,SACAjhB,QACA0qB,gBACA6C,gBACAZ,2BACA/J,wBACAgK,yBACAvC,iBACAxI,kBACAqN,aACAiC,iBACAhC,sBACAE,sBACAkC,wBACAxQ,gBACA4O,aACApE,wBACAkE,0BACAiD,oBACAnD,uBACAK,oBACAG,uBACAE,mBACAlN,iBACA0I,eACA6F,gBACAlB,wBACArF,yBACAC,4BACAI,qBACAC,iBACAgF,gBACAE,cACAE,sBACAE,eACA1E,cACAC,cACAN,YACAmB,gBACAZ,kBACAE,uBACAyE,iBACAzX,cACA4X,sBACA5J,sBACA5iB,SACAqoB,YACA7B,+BACA0H,4BACAC,mBACAC,WACA5xB,aACA2tB,sBACAC,gBACA4C,iBACAE,yBACAnY,0BACA4T,qBACA0E,eACAD,uBACAG,sBACAC,gBACApE,uBACAiF,aACAvL,kBACAJ,aACAgL,2BACA9D,UACAE,mBACAT,uBACAE,iBACAE,oBACAO,wBAEA,MAAM,YACJsE,GAAW,WACXC,GAAU,WACVC,GAAU,gBACVjT,GAAe,cACfkT,GAAa,eACbC,GAAc,qBACdC,GAAoB,WACpBC,GAAU,eACVC,GAAc,oBACdC,GAAmB,WACnBC,GAAU,uBACVC,GAAsB,cACtBC,GAAa,qBACbC,GAAoB,iBACpBC,GAAgB,oCAChBC,GAAmC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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PeerColorWrapper.tsx","webpack://telegram-t/./src/components/common/PeerColorWrapper.module.scss?b340","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/LeftVerticalFolderList.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useDisplayedFolders.ts","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/visibility/isElementInViewport.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media!.duration) : formatMediaDuration(media!.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({ isSchedule: type === 'scheduled', message: editedMessage });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  canEditMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId, WebPageMediaSize } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  GlobalState, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  ISettings,\n  MessageList,\n  MessageListType,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  DEFAULT_MAX_MESSAGE_LENGTH,\n  EDITABLE_INPUT_ID,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\nimport { useEditorState } from './hooks/useEditorState';\nimport { useShowCustomEmojiPremiumNotification } from './hooks/useShowCustomEmojiPremiumNotification';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const {\n    getHtml,\n    setHtml,\n    overwrite,\n    htmlOverwrite,\n    originalSetHtml,\n  } = useEditorState();\n\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    document.execCommand('insertHTML', false, newHtml);\n    messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useShowCustomEmojiPremiumNotification();\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    editableInputId,\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n        webPageMediaSize: attachmentSettings.webPageMediaSize,\n        webPageUrl: hasWebPagePreview ? webPagePreview!.url : undefined,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    document.getElementById(EDITABLE_INPUT_ID)?.focus();\n    document.execCommand('delete', false);\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        htmlOverwrite={htmlOverwrite}\n        overwrite={overwrite}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            overwrite={overwrite}\n            htmlOverwrite={htmlOverwrite}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={originalSetHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n            cannotInsertHtml={isComposerBlocked}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <Icon name=\"schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiPeerColor } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getApiPeerColorClass, getPeerColorClass } from './helpers/peerColor';\n\nimport EmojiIconBackground from './embedded/EmojiIconBackground';\n\nimport styles from './PeerColorWrapper.module.scss';\n\ninterface OwnProps extends React.HTMLAttributes<HTMLDivElement> {\n  peer?: ApiPeer;\n  peerColor?: ApiPeerColor;\n  noUserColors?: boolean;\n  shoudReset?: boolean;\n  className?: string;\n  emojiIconClassName?: string;\n  children: React.ReactNode;\n}\n\nfunction PeerColorWrapper({\n  peer, peerColor, noUserColors, shoudReset, className, emojiIconClassName, children, ...otherProps\n}: OwnProps) {\n  const color = peerColor || peer?.color;\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        peer && getPeerColorClass(peer, noUserColors, shoudReset),\n        peerColor && getApiPeerColorClass(peerColor),\n        className,\n      )}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    >\n      {color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          className={emojiIconClassName}\n          emojiDocumentId={color.backgroundEmojiId}\n        />\n      )}\n      {children}\n    </div>\n  );\n}\n\nexport default memo(PeerColorWrapper);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nRjVJOQv\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getPeerTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getPeerTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getPeerTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { useThrottleForHeavyAnimation } from '../../../hooks/useHeavyAnimation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useOldLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerMediaHash(customEmoji, 'preview') : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  const preloadAfterHeavyAnimation = useThrottleForHeavyAnimation(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  useEffect(() => {\n    preloadAfterHeavyAnimation();\n  }, [preloadAfterHeavyAnimation]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\n\n  useEffect(() => {\n    updateCanvasAfterHeavyAnimation();\n  }, [emojiImage, lang.isRtl, customColor, updateCanvasAfterHeavyAnimation]);\n\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\n    requestMutation(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      canvas.width = parentWidth * dpr;\n      canvas.height = parentHeight * dpr;\n\n      canvas.style.width = `${parentWidth}px`;\n      canvas.style.height = `${parentHeight}px`;\n\n      updateCanvas();\n    });\n  }, [dpr]);\n\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        isMuted: !isMuted,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, isMuted: !isMuted });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    if (!chat) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  groupStatetefulContent,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = topics\n      && Object.values(topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (topics && !hasUnmutedUnreadTopics);\n  }, [topics, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction, groupStatetefulContent } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { memo, useRef } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teactn';\nimport { getActions, useGlobal } from '../../../global';\n\nimport type { IconName } from '../../../types/icons';\nimport type { MenuItemContextAction } from '../../ui/ListItem';\nimport {\n  type ApiChatFolder, type ApiFormattedText, type ApiMessageEntityCustomEmoji, ApiMessageEntityTypes,\n} from '../../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../../config';\nimport { selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { MouseButton } from '../../../util/windowEnvironment';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport { useDisplayedFolders } from './hooks/useDisplayedFolders';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './LeftVerticalFolderList.scss';\nimport '../../ui/Tab.scss';\n\nconst LeftVerticalFolderList = () => {\n  const { setActiveChatFolder } = getActions();\n  const { activeChatFolder } = useGlobal((g) => ({ activeChatFolder: selectTabState(g).activeChatFolder }));\n  const displayedFolders = useDisplayedFolders();\n  const handleSwitchTab = useLastCallback((index: number) => {\n    setActiveChatFolder({ activeChatFolder: index }, { forceOnHeavyAnimation: true });\n  });\n\n  const folderCountersById = useFolderManagerForUnreadCounters();\n\n  return displayedFolders?.map((v, i) => {\n    const badgeCount = folderCountersById[v.id]?.chatsCount;\n    const isBadgeActive = Boolean(folderCountersById[v.id]?.notificationsCount);\n\n    return (\n      <Folder\n        folder={v}\n        active={activeChatFolder === i}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleSwitchTab(i)}\n        badgeCount={badgeCount}\n        isBadgeActive={isBadgeActive}\n        contextActions={v.contextActions.length ? v.contextActions : undefined}\n        contextRootElementSelector=\"#LeftColumn\"\n      />\n    );\n  });\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\nconst CLASS_PREFIX = 'VFolderList-folder';\nfunction Folder(\n  {\n    folder, active, onClick, badgeCount, isBadgeActive, contextActions,\n    contextRootElementSelector,\n  }: {\n    folder: ApiChatFolder;\n    active: boolean;\n    onClick: () => void;\n    badgeCount?: number;\n    isBadgeActive?: boolean;\n    contextActions?: MenuItemContextAction[];\n    contextRootElementSelector: string;\n  },\n) {\n  // eslint-disable-next-line no-null/no-null\n  const folderRef = useRef<HTMLDivElement>(null);\n  const [title, customEmoji] = extractPotentialCustomEmoji(folder.title);\n  const renderedTitle = renderTextWithEntities({ ...title, noCustomEmojiPlayback: folder.noTitleAnimations });\n  const icon = getFolderIcon(folder, customEmoji);\n\n  const {\n    contextMenuAnchor, handleContextMenu, handleBeforeContextMenu, handleContextMenuClose,\n    handleContextMenuHide, isContextMenuOpen,\n  } = useContextMenuHandlers(folderRef, !contextActions);\n  const { handleClick, handleMouseDown } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n\n    if (e.type === 'mousedown' && e.button !== MouseButton.Main) {\n      return;\n    }\n\n    onClick();\n  });\n\n  const getTriggerElement = useLastCallback(() => folderRef.current);\n  const getRootElement = useLastCallback(\n    () => (contextRootElementSelector ? folderRef.current!.closest(contextRootElementSelector) : document.body),\n  );\n  const getMenuElement = useLastCallback(\n    () => document.querySelector('#portals')!.querySelector('.Tab-context-menu .bubble'),\n  );\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <div\n      ref={folderRef}\n      tabIndex={-1}\n      className={buildClassName(CLASS_PREFIX, active && `${CLASS_PREFIX}-active`)}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onMouseDown={handleMouseDown}\n    >\n      <div className={`${CLASS_PREFIX}-iconContainer`}>\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        <div className={`${CLASS_PREFIX}-icon`}>{icon}</div>\n      </div>\n      <div className={`${CLASS_PREFIX}-title`}>{renderedTitle}</div>\n\n      {contextActions && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"Tab-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport const EMOTICON_FOLDER_MAP: Record<string, IconName> = {\n  '⭐': 'folder-star',\n  '💬': 'folder-chats',\n  '📢': 'folder-channel',\n  '✅': 'folder-chat',\n  '🤖': 'folder-bot',\n  '📁': 'folder-folder',\n  '👥': 'folder-group',\n  '👤': 'folder-user',\n};\nexport const FOLDER_EMOTICON_MAP = Object.fromEntries(\n  Object.entries(EMOTICON_FOLDER_MAP)\n    .map(([k, v]) => [v, k]),\n) as Record<IconName, string>;\nfunction getFolderIcon(folder: ApiChatFolder, customEmoji: ApiMessageEntityCustomEmoji | undefined) {\n  if (customEmoji) {\n    return <CustomEmoji documentId={customEmoji.documentId} size={36} noPlay={folder.noTitleAnimations} />;\n  }\n  let name: IconName = folder.id === ALL_FOLDER_ID ? 'folder-chats' : 'folder-folder';\n  if (!folder.emoticon) {\n    const all = [\n      ['contacts', folder.contacts, 'folder-user'],\n      ['nonContacts', folder.nonContacts, 'folder-folder'],\n      ['groups', folder.groups, 'folder-group'],\n      ['channels', folder.channels, 'folder-channel'],\n      ['bots', folder.bots, 'folder-bot'],\n    ] as const;\n    const unique = all.filter((v) => v[1]);\n    if (unique.length === 1) {\n      name = unique[0][2];\n    }\n  } else if (folder.emoticon in EMOTICON_FOLDER_MAP) {\n    name = EMOTICON_FOLDER_MAP[folder.emoticon];\n  }\n  return <Icon name={name} />;\n}\nexport function extractPotentialCustomEmoji(title: ApiFormattedText):\n[ApiFormattedText, ApiMessageEntityCustomEmoji | undefined, string | undefined] {\n  title = JSON.parse(JSON.stringify(title));\n  if (!title.entities) {\n    return [title, undefined, undefined];\n  }\n  const customEmojis = title.entities?.filter((v) => v.type === ApiMessageEntityTypes.CustomEmoji);\n  if (customEmojis?.length !== 1) {\n    return [title, undefined, undefined];\n  }\n  const customEmoji = customEmojis[0];\n  const emoji = customEmoji ? title.text.slice(customEmoji.offset, customEmoji.offset + customEmoji.length) : undefined;\n  if (customEmoji.offset === 0) {\n    for (const entity of title.entities) {\n      entity.offset -= customEmoji.length;\n    }\n    title.entities = title.entities.filter((v) => v !== customEmoji);\n    title.text = title.text.slice(customEmoji.length);\n    return [title, customEmoji, emoji];\n  } else if (customEmoji.length + customEmoji.offset === title.text.length) {\n    title.entities = title.entities.filter((v) => v !== customEmoji);\n    title.text = title.text.slice(0, customEmoji.offset);\n    return [title, customEmoji, emoji];\n  } else {\n    return [title, undefined, undefined];\n  }\n}\nexport function replaceCustomEmoji(\n  title: ApiFormattedText,\n  newCustomEmojiEmoji: string,\n  newCustomEmojiId: string,\n): ApiFormattedText {\n  let [{ text, entities }] = extractPotentialCustomEmoji(title);\n  text = text.trim();\n  text += ' ';\n  const offset = text.length;\n  const length = newCustomEmojiEmoji.length;\n  const entity: ApiMessageEntityCustomEmoji = {\n    type: ApiMessageEntityTypes.CustomEmoji,\n    offset,\n    length,\n    documentId: newCustomEmojiId,\n  };\n  text += newCustomEmojiEmoji;\n  entities = [...(entities ?? []), entity];\n  return { text, entities };\n}\n\nexport const FolderIcon = memo(({ folder }: { folder: ApiChatFolder }) => {\n  const [, customEmoji] = extractPotentialCustomEmoji(folder.title);\n  const icon = getFolderIcon(folder, customEmoji);\n  return <div className=\"VFolderList-folder\">{icon}</div>;\n});\n\nexport default memo(LeftVerticalFolderList);\n","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { isApiPeerChat } from '../../../../global/helpers/peers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(oldLang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            oldLang,\n            lastMessage,\n            lastMessageSender && !isApiPeerChat(lastMessageSender) ? lastMessageSender : undefined,\n            lastMessageSender && isApiPeerChat(lastMessageSender) ? lastMessageSender : chat,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(oldLang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport { useEffect, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, useGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { ALL_FOLDER_ID } from '../../../../config';\nimport { selectCanShareFolder, selectTabState } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nconst SAVED_MESSAGES_HOTKEY = '0';\nconst FIRST_FOLDER_INDEX = 0;\n\nexport interface DisplayedFolder extends ApiChatFolder {\n  contextActions: MenuItemContextAction[];\n}\n\nexport function useDisplayedFolders(vertical = false) {\n  const {\n    chatFoldersById,\n    orderedFolderIds,\n    activeChatFolder,\n    currentUserId,\n    folderInvitesById,\n  } = useGlobal((global) => {\n    const {\n      chatFolders: {\n        byId: chatFoldersById,\n        orderedIds: orderedFolderIds,\n        invites: folderInvitesById,\n      },\n      currentUserId,\n    } = global;\n    const { activeChatFolder } = selectTabState(global);\n\n    return {\n      chatFoldersById,\n      orderedFolderIds,\n      activeChatFolder,\n      currentUserId,\n      folderInvitesById,\n    };\n  });\n  const {\n    loadChatFolders,\n    setActiveChatFolder,\n    openChat,\n    openLimitReachedModal,\n    openShareChatFolderModal,\n    openEditChatFolder,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lang = useLang();\n\n  useEffect(() => {\n    loadChatFolders();\n  }, []);\n\n  const allChatsFolder: ApiChatFolder = useMemo(() => {\n    return {\n      id: ALL_FOLDER_ID,\n      title: {\n        text: orderedFolderIds?.[0] === ALL_FOLDER_ID && !vertical ? lang('FilterAllChatsShort')\n          : lang('FilterAllChats'),\n      },\n      includedChatIds: MEMO_EMPTY_ARRAY,\n      excludedChatIds: MEMO_EMPTY_ARRAY,\n    } satisfies ApiChatFolder;\n  }, [orderedFolderIds, lang, vertical]);\n\n  const displayedFolders = useMemo(() => {\n    return orderedFolderIds\n      ? orderedFolderIds.map((id) => {\n        if (id === ALL_FOLDER_ID) {\n          return allChatsFolder;\n        }\n\n        return chatFoldersById[id] || {};\n      }).filter(Boolean)\n        .map((v): DisplayedFolder => {\n          const { id } = v;\n          const canShareFolder = selectCanShareFolder(getGlobal(), id);\n          const contextActions = new Array<MenuItemContextAction>();\n          const maxChatLists = selectCurrentLimit(getGlobal(), 'chatlistJoined');\n          const maxFolderInvites = selectCurrentLimit(getGlobal(), 'chatlistInvites');\n\n          if (canShareFolder) {\n            contextActions.push({\n              title: lang('FilterShare'),\n              icon: 'link',\n              handler: () => {\n                const chatListCount = Object.values(chatFoldersById)\n                  .reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n                if (chatListCount >= maxChatLists && !v.isChatList) {\n                  openLimitReachedModal({\n                    limit: 'chatlistJoined',\n                  });\n                  return;\n                }\n\n                // Greater amount can be after premium downgrade\n                if (folderInvitesById[id]?.length >= maxFolderInvites) {\n                  openLimitReachedModal({\n                    limit: 'chatlistInvites',\n                  });\n                  return;\n                }\n\n                openShareChatFolderModal({\n                  folderId: id,\n                });\n              },\n            });\n          }\n\n          if (id !== ALL_FOLDER_ID) {\n            contextActions.push({\n              title: lang('FilterEdit'),\n              icon: 'edit',\n              handler: () => {\n                openEditChatFolder({ folderId: id });\n              },\n            });\n\n            contextActions.push({\n              title: lang('FilterDelete'),\n              icon: 'delete',\n              destructive: true,\n              handler: () => {\n                openDeleteChatFolderModal({ folderId: id });\n              },\n            });\n          }\n\n          return { ...v, contextActions };\n        })\n      : undefined;\n  }, [lang, folderInvitesById, chatFoldersById, allChatsFolder, orderedFolderIds]);\n\n  const isInFirstFolder = FIRST_FOLDER_INDEX === activeChatFolder;\n\n  const isNotInFirstFolderRef = useRef();\n  isNotInFirstFolderRef.current = !isInFirstFolder;\n  useEffect(() => (isNotInFirstFolderRef.current ? captureEscKeyListener(() => {\n    if (isNotInFirstFolderRef.current) {\n      setActiveChatFolder({ activeChatFolder: FIRST_FOLDER_INDEX });\n    }\n  }) : undefined), [activeChatFolder, setActiveChatFolder]);\n\n  useHistoryBack({\n    isActive: !isInFirstFolder,\n    onBack: () => setActiveChatFolder({ activeChatFolder: FIRST_FOLDER_INDEX }, { forceOnHeavyAnimation: true }),\n  });\n\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.ctrlKey && e.shiftKey && e.code.startsWith('Digit') && displayedFolders) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit) return;\n\n        if (digit === SAVED_MESSAGES_HOTKEY) {\n          openChat({ id: currentUserId, shouldReplaceHistory: true });\n          return;\n        }\n\n        const folder = Number(digit) - 1;\n        if (folder > displayedFolders.length - 1) return;\n\n        setActiveChatFolder({ activeChatFolder: folder }, { forceOnHeavyAnimation: true });\n        e.preventDefault();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, true);\n    };\n  }, [currentUserId, displayedFolders, openChat, setActiveChatFolder]);\n\n  return displayedFolders;\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getPeerTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo,\n  useEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { IS_ANDROID, IS_IOS, IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport RichTextInput from './RichTextInput';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  htmlOverwrite: Signal<string>;\n  overwrite: boolean;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n  cannotInsertHtml?: boolean;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  htmlOverwrite,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n  overwrite,\n  cannotInsertHtml,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  const maxInputHeight = useMemo(\n    () => (\n      isAttachmentModalInput\n        ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n        : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416)\n    ),\n    [isAttachmentModalInput, isStoryInput, isMobile],\n  );\n\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleKeyDown = useLastCallback(\n    (e: React.KeyboardEvent<HTMLDivElement>): { processSelection: true } | { closeTextFormatter: true } | undefined => {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n      const { isComposing } = e;\n\n      const html = getHtml();\n      if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n        const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n        if (targetIndexDelta) {\n          e.preventDefault();\n\n          replyToNextMessage({ targetIndexDelta });\n          return undefined;\n        }\n      }\n\n      if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n        if (\n          !isMobileDevice\n          && (\n            (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n          )\n        ) {\n          e.preventDefault();\n\n          onSend();\n          return { closeTextFormatter: true };\n        }\n      } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n        e.preventDefault();\n        editLastMessage();\n      }\n\n      return { processSelection: true };\n    },\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  return (\n    <RichTextInput\n      ref={ref}\n      customEmojiPrefix={customEmojiPrefix}\n      isReady={isReady}\n      containerId={id}\n      captionLimit={captionLimit}\n      inputId={editableInputId || EDITABLE_INPUT_ID}\n      isActive={isActive}\n      getHtml={getHtml}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      htmlOverwrite={htmlOverwrite}\n      placeholder={placeholder}\n      placeholderComponent={(\n        <>\n          {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n          {shouldDisplayTimer ? (\n            <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n          ) : placeholder}\n          {isStoryInput && isNeedPremium && (\n            <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n              {lang('StoryRepliesLockedButton')}\n            </Button>\n          )}\n        </>\n      )}\n      shouldSuppressTextFormatter={shouldSuppressTextFormatter}\n      onUpdate={onUpdate}\n      onScroll={onScroll}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      isNeedPremium={isNeedPremium}\n      overwrite={overwrite}\n      cannotInsertHtml={cannotInsertHtml}\n      isEditable={isAttachmentModalInput || canSendPlainText}\n      maxInputHeight={maxInputHeight}\n      forcedPlaceholder={forcedPlaceholder}\n      shouldSuppressFocus={shouldSuppressFocus}\n      onSuppressedFocus={onSuppressedFocus}\n      handlePaste={false}\n      chatId={chatId}\n      canRenderEmojiTooltip={false}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const caretPosition = getCaretPosition(inputEl);\n      const selection = window.getSelection()!;\n      for (let i = 0; i < fixedHtmlBeforeSelection.length - atIndex + 1; ++i) {\n        selection.modify('extend', 'backward', 'character');\n      }\n      document.execCommand('insertHTML', false, newHtml);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import {\n  type RefObject,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n} : {\n  ref?: RefObject<RefType | null>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  // eslint-disable-next-line no-null/no-null\n  const localRef = useRef<RefType>(null);\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type {\n  ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  message: ApiSponsoredMessage;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenu: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = message.sponsorInfo || !shouldSkipAbout || message.canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {message.sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {message.canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredMessageContextMenu from './SponsoredMessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsoredMessage,\n    hideSponsoredMessages,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({ chatId: message.chatId });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsoredMessages();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsoredMessage({ peerId: message.chatId, randomId: message.randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredMessageContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        message={message}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !shouldHidePreview);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport { getGiftAttributes, getStickerFromGift } from '../../common/helpers/gifts';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n  isEditing?: boolean;\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n  isEditing,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const giftStickersRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    if (!webPage) return;\n\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonLangKey(type) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  function renderStarGiftUnique() {\n    const gift = webPage?.gift;\n    if (!gift || gift.type !== 'starGiftUnique') return undefined;\n\n    const sticker = getStickerFromGift(gift)!;\n    const attributes = getGiftAttributes(gift);\n    const { backdrop, pattern, model } = attributes || {};\n\n    if (!backdrop || !pattern || !model) return undefined;\n\n    const backgroundColors = [backdrop.centerColor, backdrop.edgeColor];\n\n    return (\n      <div\n        className=\"web-page-gift web-page-centered web-page-unique\"\n        onClick={() => handleOpenTelegramLink()}\n      >\n        <div className=\"web-page-unique-background-wrapper\">\n          <RadialPatternBackground\n            className=\"web-page-unique-background\"\n            backgroundColors={backgroundColors}\n            patternColor={backdrop.patternColor}\n            patternIcon={pattern.sticker}\n          />\n        </div>\n        <div ref={giftStickersRef} key={sticker.id} className=\"WebPage--unique-sticker\">\n          <StickerView\n            containerRef={giftStickersRef}\n            sticker={sticker}\n            size={STAR_GIFT_STICKER_SIZE}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && !inPreview && (\n          renderStarGiftUnique()\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', !inPreview && 'WebPage-text_interactive')}\n            onClick={!inPreview ? () => openUrl({ url, shouldSkipModal: true }) : undefined}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {(!inPreview || isGift) && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{oldLang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{lang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element!.clientWidth!);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { ApiLimitType } from '../../api/types';\nimport type { GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nimport { extractPotentialCustomEmoji, replaceCustomEmoji } from '../../components/left/main/LeftVerticalFolderList';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist' | 'setEmoticon' | 'toggleAnimations' | 'setCustomEmoji'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle': {\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    }\n    case 'setEmoticon':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: extractPotentialCustomEmoji(state.folder.title)[0].text.trim() },\n          emoticon: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setCustomEmoji': {\n      const [emoji, documentId] = action.payload;\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          emoticon: undefined,\n          title: replaceCustomEmoji(state.folder.title, emoji, documentId),\n        },\n        isTouched: true,\n      };\n    }\n    case 'toggleAnimations':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          noTitleAnimations: state.folder.noTitleAnimations ? undefined : true,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/windowEnvironment';\n\ntype ElementType = HTMLElement;\ntype RefType = {\n  current: ElementType | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: ElementType) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","onPaneStateChange","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","isRendering","ref","shouldRender","useHeaderPane","isOpen","onStateChange","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","start","end","style","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","mediaSource","isVoice","isSeeking","useRef","isRtl","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","useMedia","ApiMediaFormat","BlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useLastCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Icon","name","ripple","color","ariaLabel","backgroundImage","nonInteractive","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","add","body","appendChild","RE_COMMAND","isFrozen","URL_ENTITIES","Set","ApiMessageEntityTypes","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","href","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","async","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","Promise","resolve","reject","onstop","blob","Blob","onerror","delayStop","setTimeout","pause","props","attachments","AttachmentModal","useModuleLoader","Bundles","Extra","AttachMenu","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","canEditMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","useFlag","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","groupedId","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","files","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","from","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","file","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","includes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","BotMenuButton","text","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","useLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","stripCustomEmoji","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","anchor","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","WebPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","isSmallerMedia","webPageMediaSize","detectLinkDebounced","useDebouncedResolver","formattedText","parseHtmlAsFormattedText","linkEntity","entities","find","entity","url","match","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","storyId","chatBot","isSystemBot","selectBot","isChatWithBot","isChatWithUser","isUserId","userFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","peer","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","Composer","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showNotification","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","inputRef","storyReactionRef","setHtml","overwrite","htmlOverwrite","originalSetHtml","useEditorState","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePreviousDeprecated","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","setAttachments","hasAttachments","nextText","setNextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","messageInput","getElementById","execCommand","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertTextAndUpdateCursor","replace","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","editedMessage","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","newAttachments","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","buildAttachment","canReplace","canReplaceMessageMedia","all","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","err","console","error","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","html","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","innerHTML","querySelectorAll","el","innerText","getAttribute","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","substring","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","CustomEmoji","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","has","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","useShowCustomEmojiPremiumNotification","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","useClipboardPaste","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","webPageUrl","activeElement","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","EDITABLE_INPUT_MODAL_ID","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","selection","getSelection","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","EDITABLE_INPUT_ID","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","Avatar","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","cannotInsertHtml","Spinner","formatVoiceRecordDuration","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","isSavedDialog","isPrivateChat","user","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","thumbDataUri","getMediaThumbUri","localBlobUrl","previewBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","src","alt","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","selectTopic","messagesCount","selectThreadMessagesCount","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","Media","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","Keys","NothingFound","description","peerColor","noUserColors","shoudReset","emojiIconClassName","children","otherProps","_extends","getApiPeerColorClass","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","PrivateChatInfo","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","useIntervalForceUpdate","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","currentTime","specialIcon","role","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","ProfileInfo","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","element","styles","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isSystemBotChat","isReadDateRestrictedByMe","membersCount","renderStatus","iconEmojiId","observeIntersectionForPlaying","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","NBSP","EmbeddedMessage","forwardSender","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getPeerTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","isFullVideo","getPictogramDimensions","srcUrl","shouldRenderVideo","renderPictogram","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","getStickerMediaHash","previewUrl","customColor","useDynamicColorListener","preloadAfterHeavyAnimation","useThrottleForHeavyAnimation","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasAfterHeavyAnimation","updateCanvasSize","parentWidth","parentHeight","handleResize","entry","contentRect","useResizeObserver","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","range","startMinute","endMinute","sort","a","b","last","DAYS","BusinessHours","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","tabIndex","Number","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","openGiftModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","buildCollectionByKey","split","digit","effectSticker","randomEffect","random","hash","effectHash","column","top","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserId","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","isBotCanManageEmojiStatus","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","withNodes","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","s","ChatFolderModal","MuteChatModal","ChatCallStatus","lastMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","isOutgoing","savedDialogSender","fromId","messageSender","lastMessageSender","replyToMessageId","getMessageReplyInfo","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatetefulContent","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","shouldReplaceHistory","handleDragEnter","preventDefault","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","hasMiniApp","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","miniAppButton","pill","visiblePinnedElement","elements","renderContent","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","isMinimized","handler","actionExpand","actionHide","isHidden","compact","root","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","payload","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","fluid","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","addEventListener","handleKeyDown","removeEventListener","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","rect","currentTarget","clientY","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","event","scrollHeight","deltaY","passive","useTopOverscroll","InfiniteScroll","items","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","viewportOffset","indexOf","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","selectTopics","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","ForumPanel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","classNames","CLASS_PREFIX","Folder","folder","active","badgeCount","isBadgeActive","contextRootElementSelector","folderRef","extractPotentialCustomEmoji","renderedTitle","noCustomEmojiPlayback","noTitleAnimations","getFolderIcon","MouseButton","Secondary","Main","getLayout","withPortal","EMOTICON_FOLDER_MAP","FOLDER_EMOTICON_MAP","fromEntries","entries","k","v","noPlay","unique","contacts","nonContacts","groups","channels","JSON","parse","stringify","replaceCustomEmoji","newCustomEmojiEmoji","newCustomEmojiId","FolderIcon","LeftVerticalFolderList","setActiveChatFolder","activeChatFolder","useGlobal","g","displayedFolders","useDisplayedFolders","handleSwitchTab","folderCountersById","notificationsCount","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","isApiPeerChat","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","remove","ANIMATION_END_DELAY","SAVED_MESSAGES_HOTKEY","FIRST_FOLDER_INDEX","vertical","chatFoldersById","orderedFolderIds","folderInvitesById","invites","loadChatFolders","openShareChatFolderModal","openEditChatFolder","openDeleteChatFolderModal","allChatsFolder","includedChatIds","excludedChatIds","canShareFolder","selectCanShareFolder","maxChatLists","maxFolderInvites","isChatList","isInFirstFolder","isNotInFirstFolderRef","shiftKey","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","senderId","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","scrollX","scrollY","innerWidth","innerHeight","seed","filterId","SNAP_EFFECT_ID","generateUniqueId","component","ghost","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","slope","intercept","attributeName","dur","in2","operator","xChannelSelector","yChannelSelector","createFilter","elementContainer","svg","jsxToHtml","foreignObject","computedStyle","getComputedStyle","clone","cloneNode","getPropertyValue","snapContainer","removeChild","once","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","DOMParser","parseFromString","path","strokeWidth","documentElement","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","CustomSend","DropTarget","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","baseVal","useEffectOnce","onDrop","hideTimeoutRef","prevWithQuick","isInAlbum","handleFilesDrop","dataTransfer","dt","folderFiles","getFilesFromDataTransferItems","concat","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","clearTimeout","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","maxInputHeight","focusInput","getIsHeavyAnimating","isComposing","altKey","closeTextFormatter","processSelection","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","input","isSelectionCollapsed","isCollapsed","tagName","isContentEditable","newEvent","KeyboardEvent","RichTextInput","onKeyDown","placeholderComponent","TextTimer","endsAt","onEnd","handlePaste","canRenderEmojiTooltip","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","onLoad","onSearchOpen","replaceWithTeact","STARS_ICON_PLACEHOLDER","THROTTLE","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","pickTruthy","forceFocus","userFirstOrLastName","htmlToInsert","MentionName","fixedHtmlBeforeSelection","atIndex","lastIndexOf","shiftCaretPosition","substr","caretPosition","getCaretPosition","modify","newCaretPosition","setCaretPosition","CLOSE_DURATION","RESIZE_THROTTLE","providedRef","withResizeObserver","setShouldRender","localRef","lastHeightRef","reset","useUnmountCleanup","handleUpdate","requestForcedReflow","currentHeight","useThrottledCallback","applyAnimationState","list","noTransition","cumulativeHeight","state","shiftPx","apply","setExtraStyles","zIndex","String","transition","dataset","isPanelOpen","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","mediaUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isMirrored","anchorRef","canLoad","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","updatePosition","useOverlayPosition","overlayRef","isForMessageEffect","effectClassName","AnimatedSticker","play","isLowPriority","onEnded","Photo","messageText","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","isInWebPage","clickArg","isPaidPreview","mediaType","withBlurredBackground","useBlurredMediaThumbRef","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","useShowTransition","noMountTransition","withShouldRender","downloadButtonRef","shouldRenderDownloadButton","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","removeAttribute","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","setAttribute","isSmall","calculateMediaDimensions","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","withAnimation","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","RoundVideo","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","useSignal","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","safePlay","capturePlaying","togglePlaying","paused","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","r","SponsoredMessageContextMenu","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","sponsorInfo","canReport","SponsoredMessageContextMenuContainer","onItemClick","openAboutAdsModal","reportSponsoredMessage","hideSponsoredMessages","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","randomId","Video","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isInline","isUnsupported","useUnsupportedMedia","isPreviewPreloaded","canLoadPreview","shouldHidePreview","previewRef","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","onAudioPlay","onCancelMediaTransfer","openUrl","openTelegramLink","stickersRef","giftStickersRef","handleMediaClick","handleContainerClick","handleOpenTelegramLink","hasCustomColor","isWithTextColor","documents","shouldUseTextColor","mediaSize","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","quickButtonTitle","isArticle","isSquarePhoto","isMediaInteractive","PeerColorWrapper","BaseStory","gift","getStickerFromGift","attributes","getGiftAttributes","backdrop","pattern","model","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","renderStarGiftUnique","shouldSkipModal","isEmoji","caption","isRectangular","noForcedUpperCase","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS_RATIO","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","transferables","useOffscreenCanvasBlur","PENDING_TRANSLATIONS","Map","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","set","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","delete","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","anchorCenterY","anchorBottomY","messagesContainer","REACTION_SIZE","ReactionSelectorCustomReaction","chosen","noAppearAnimation","isLocked","onSendPaidReaction","onShowPaidReactionModal","StarReaction","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","staticIcon","isAnimationLoaded","markAnimationLoaded","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isForEffects","isWithPaidReaction","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","availableReaction","isInactive","canSendReaction","sortedReactions","sortReactions","unshift","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","initialSection","hintText","parts","isPrimary","selectCurrentChat","DeleteMemberModal","deleteChatMember","handleDeleteChatMember","textParts","useAsyncRendering","dependencies","delay","timeoutRef","exec","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderBalanceCell","balance","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","avatar","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","format","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","load","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideos","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","buildStyle","effectSize","shouldPause","ownProps","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","temperatureC","backgroundColor","convertToRGBA","textColor","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","withTranslucentThumb","navigator","formatTemperature","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","openUniqueGiftBySlug","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","channelId","slug","handleMediaAreaClick","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","phoneCall","adminId","selectCanInviteToActiveGroupCall","appConfig","DEFAULT_LIMITS","limits","selectPremiumLimit","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","videoHeight","videoWidth","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includeFilters","pick","excludeFilters","getSuggestedFolderName","filters","INITIAL_STATE","chatFilter","foldersReducer","omit","useFoldersReducer","useReducer","interval","trackId","originalDuration","handlers","metadata","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","destroy","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","HTMLElement","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","noLoad","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","reducer","initialState","reducerRef","dispatch","noFirst","noLast","deps","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSubmit","onSecondButtonClick","VIDEO_REVEAL_DELAY","useStreaming","mimeType","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","createObjectURL","revokeObjectURL","buffer","DEBUG","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","ConnectorClass","constructor","channel","_defineProperty","throttleWithTickEnd","this","payloads","pendingPayloads","pendingTransferables","postMessage","postMessageOnTickEnd","request","messageData","requestStates","requestStatesByCallback","restMessageData","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","Error","postMessagesOnTickEnd","createConnector","worker","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","filename","pendingDownload","downloadOne","processQueue","rel","click","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","node","nodeType","messageEl","firstChild","parentNode","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","fileSelector","accept","noMultiple","onchange","isElementInViewport","windowHeight"],"sourceRoot":""}